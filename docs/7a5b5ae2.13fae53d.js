(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{100:function(e,t,i){"use strict";i.d(t,"a",(function(){return b})),i.d(t,"b",(function(){return h}));var n=i(0),r=i.n(n);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function c(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=r.a.createContext({}),d=function(e){var t=r.a.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},b=function(e){var t=d(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,a=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=d(i),p=n,h=b["".concat(o,".").concat(p)]||b[p]||u[p]||a;return i?r.a.createElement(h,l(l({ref:t},s),{},{components:i})):r.a.createElement(h,l({ref:t},s))}));function h(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=i.length,o=new Array(a);o[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var s=2;s<a;s++)o[s]=i[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,i)}p.displayName="MDXCreateElement"},79:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return o})),i.d(t,"metadata",(function(){return l})),i.d(t,"rightToc",(function(){return c})),i.d(t,"default",(function(){return d}));var n=i(3),r=i(7),a=(i(0),i(100)),o={id:"directory-structure",title:"Directory Structure"},l={unversionedId:"directory-structure",id:"directory-structure",isDocsHomePage:!1,title:"Directory Structure",description:"An initial and empty silvie project should have these files and folders in order to work properly. For a further",source:"@site/docs/directory-structure.md",slug:"/directory-structure",permalink:"/docs/directory-structure",editUrl:"https://github.com/silviejs/silviejs.github.io/tree/main/website/docs/directory-structure.md",version:"current",sidebar:"docsSidebar",previous:{title:"Installation",permalink:"/docs/installation"},next:{title:"Configuration",permalink:"/docs/configuration"}},c=[{value:"Initial Directories",id:"initial-directories",children:[{value:"Src",id:"src",children:[]},{value:"Assets",id:"assets",children:[]},{value:"Bootstrap",id:"bootstrap",children:[]},{value:"Config",id:"config",children:[]},{value:"Controllers",id:"controllers",children:[]},{value:"Migrations",id:"migrations",children:[]},{value:"Seeders",id:"seeders",children:[]},{value:"Data Loaders",id:"data-loaders",children:[]},{value:"Resolvers",id:"resolvers",children:[]},{value:"Schemas",id:"schemas",children:[]},{value:"Models",id:"models",children:[]}]},{value:"Initial Files",id:"initial-files",children:[{value:".env",id:"env",children:[]},{value:".env.example <sup>optional</sup>",id:"envexample-optional",children:[]},{value:".gitignore <sup>optional</sup>",id:"gitignore-optional",children:[]},{value:"tsconfig.json",id:"tsconfigjson",children:[]}]},{value:"Extra Directories",id:"extra-directories",children:[{value:".silvie",id:"silvie",children:[]},{value:"build",id:"build",children:[]},{value:"bundle",id:"bundle",children:[]}]}],s={rightToc:c};function d(e){var t=e.components,i=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},s,i,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"An initial and empty silvie project should have these files and folders in order to work properly. For a further\nexplanation please take your time to get familiar with the structure and continue reading below."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"project root\n\u251c\u2500 src\n\u2502  \u251c\u2500 assets\n\u2502  \u251c\u2500 bootstrap\n\u2502  \u2502  \u251c\u2500 index.ts\n\u2502  \u2502  \u2514\u2500 types.d.ts\n\u2502  \u251c\u2500 config\n\u2502  \u2502  \u251c\u2500 auth.ts\n\u2502  \u2502  \u251c\u2500 database.ts\n\u2502  \u2502  \u251c\u2500 graphql.ts\n\u2502  \u2502  \u251c\u2500 http.ts\n\u2502  \u2502  \u251c\u2500 mail.ts\n\u2502  \u2502  \u2514\u2500 storage.ts\n\u2502  \u251c\u2500 controllers\n\u2502  \u251c\u2500 database\n\u2502  \u2502  \u251c\u2500 migrations\n\u2502  \u2502  \u2514\u2500 seeders\n\u2502  \u251c\u2500 graphql\n\u2502  \u2502  \u251c\u2500 dataloaders\n\u2502  \u2502  \u251c\u2500 resolvers\n\u2502  \u2502  \u2514\u2500 schemas\n\u2502  \u2514\u2500 models\n\u251c\u2500 .env\n\u251c\u2500 .env.example\n\u251c\u2500 .gitignore\n\u2514\u2500 tsconfig.json\n")),Object(a.b)("h2",{id:"initial-directories"},"Initial Directories"),Object(a.b)("p",null,"Now we are going to discuss each directory, and the reason it is important to for the Silvie. Some directories need you\nto create an initial file in them which is explained after directory description."),Object(a.b)("h3",{id:"src"},"Src"),Object(a.b)("p",null,"This is where you store your source codes. all of your static assets and code files must be located in this directory."),Object(a.b)("h3",{id:"assets"},"Assets"),Object(a.b)("p",null,"This directory may contain your static assets. It will be copied to the output",Object(a.b)("em",{parentName:"p"},"(compiled)")," directory after you build or\nbundle your application. "),Object(a.b)("h3",{id:"bootstrap"},"Bootstrap"),Object(a.b)("p",null,"This directory will contain an index file which is meant to call the Silvie bootstrap function to start the\napplication. You need to load all ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"#schemas"}),"schemas"),", ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"#resolvers"}),"resolvers")," and ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"#data-loaders"}),"data loaders")," and pass\nthem all to the bootstrap function, to initialize a GraphQL Server with those initial entities."),Object(a.b)("h3",{id:"config"},"Config"),Object(a.b)("p",null,"Your config files will be stored here. There must be some initial config files which you can learn more about in\n",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/configuration"}),"Configuration Section")),Object(a.b)("h3",{id:"controllers"},"Controllers"),Object(a.b)("p",null,"This directory will contain the controllers."),Object(a.b)("h3",{id:"migrations"},"Migrations"),Object(a.b)("p",null,"This directory will contain database migrations which will create database entities from the schema definitions."),Object(a.b)("h3",{id:"seeders"},"Seeders"),Object(a.b)("p",null,"This directory will contain database seeders to insert initial data into database tables."),Object(a.b)("h3",{id:"data-loaders"},"Data Loaders"),Object(a.b)("p",null,"This directory will contain all of GraphQL data loaders."),Object(a.b)("h3",{id:"resolvers"},"Resolvers"),Object(a.b)("p",null,"This directory will contain all of GraphQL resolvers."),Object(a.b)("h3",{id:"schemas"},"Schemas"),Object(a.b)("p",null,"This directory will contain all of GraphQL schemas."),Object(a.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(a.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"GraphQL Files")),Object(a.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"Please note that you need to import schemas, resolvers and data loaders in your bootstrap file and pass them to Silvie's\nbootstrap function.  "))),Object(a.b)("h3",{id:"models"},"Models"),Object(a.b)("p",null,"This directory will contain all of your models. They will be automatically loaded into the application."),Object(a.b)("h2",{id:"initial-files"},"Initial Files"),Object(a.b)("p",null,"These files need to be created initially to run your application."),Object(a.b)("h3",{id:"env"},".env"),Object(a.b)("p",null,"This file is a configuration file that may be different on various environments. It contains application specific\ninformation, database and redis credentials or any other environment variables you may want to inject into your codes. "),Object(a.b)("h3",{id:"envexample-optional"},".env.example ",Object(a.b)("sup",null,"optional")),Object(a.b)("p",null,"This file has no actual effect in the application. It is an empty template for the main ",Object(a.b)("inlineCode",{parentName:"p"},".env")," file, because it is\nnot a good practice to upload ",Object(a.b)("inlineCode",{parentName:"p"},".env")," files since it may contain sensitive passwords. You should make a copy of\n",Object(a.b)("inlineCode",{parentName:"p"},".env.example")," on your server and fill in the blanks there.  "),Object(a.b)("h3",{id:"gitignore-optional"},".gitignore ",Object(a.b)("sup",null,"optional")),Object(a.b)("p",null,"If you are working with Git, you should exclude some directories. To prevent uploading them along with your codes."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},".env"),Object(a.b)("li",{parentName:"ul"},".silvie"),Object(a.b)("li",{parentName:"ul"},"build"),Object(a.b)("li",{parentName:"ul"},"bundle"),Object(a.b)("li",{parentName:"ul"},"node_modules")),Object(a.b)("h3",{id:"tsconfigjson"},"tsconfig.json"),Object(a.b)("p",null,"This is the typescript configuration file to resolve modules with an alias name and enable some language features.\nYou can learn more about Typescript configurations in Silvie, in ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/configuration#tsconfig"}),"Configuration Section"),"."),Object(a.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(a.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(a.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"Helper Commands")),Object(a.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"To ensure the directory structure has been set up correctly, use ",Object(a.b)("inlineCode",{parentName:"p"},"silvie check")," command. Or if you need some help with\ncreating the initial files or create missing files and directories, use ",Object(a.b)("inlineCode",{parentName:"p"},"silvie fix")," command. "))),Object(a.b)("hr",null),Object(a.b)("h2",{id:"extra-directories"},"Extra Directories"),Object(a.b)("p",null,"The following directories do not exist at first, But will be created next to src folder when you somehow run or build\nthe application."),Object(a.b)("h3",{id:"silvie"},".silvie"),Object(a.b)("p",null,"This directory is some sort of temporary directory which contains storage files, tmp upload directory and session files.\nThis is created automatically whenever you run the application in development mode. It will be created in production\ntoo, but it will be in their corresponding directories."),Object(a.b)("h3",{id:"build"},"build"),Object(a.b)("p",null,"This directory will be created after you run the build command. The build command will compile your project files into\nNode.js compatible files. Then you can run your application by running the ",Object(a.b)("inlineCode",{parentName:"p"},"build/bootstrap/index.js")," file."),Object(a.b)("h3",{id:"bundle"},"bundle"),Object(a.b)("p",null,"This directory will be created after you run the bundle command. This command will bundle all of your source files into\na single javascript file, then your will be able to run the application by running the ",Object(a.b)("inlineCode",{parentName:"p"},"bundle/index.js")," file."))}d.isMDXComponent=!0}}]);