(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{60:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return s}));var n=a(3),r=a(7),b=(a(0),a(99)),i={id:"query-builders",title:"Query Builders"},l={unversionedId:"query-builders",id:"query-builders",isDocsHomePage:!1,title:"Query Builders",description:"We've talked about how you can build and initialize your database using migrations and seeders. There is also another",source:"@site/docs\\query-builders.md",slug:"/query-builders",permalink:"/docs/query-builders",editUrl:"https://github.com/silviejs/silviejs.github.io/tree/main/website/docs/query-builders.md",version:"current",sidebar:"docsSidebar",previous:{title:"Seeders",permalink:"/docs/seeders"},next:{title:"Models",permalink:"/docs/models"}},c=[{value:"Query Builder",id:"query-builder",children:[{value:"Constructor",id:"constructor",children:[]},{value:"Selections",id:"selections",children:[]},{value:"Conditions",id:"conditions",children:[]},{value:"Order",id:"order",children:[]},{value:"Group",id:"group",children:[]},{value:"Offset",id:"offset",children:[]},{value:"Limit",id:"limit",children:[]},{value:"Joins",id:"joins",children:[]},{value:"Unions",id:"unions",children:[]},{value:"Fetch",id:"fetch",children:[]},{value:"Existence",id:"existence",children:[]},{value:"Aggregates",id:"aggregates",children:[]},{value:"Update",id:"update",children:[]},{value:"Delete",id:"delete",children:[]},{value:"Insert",id:"insert",children:[]},{value:"Alias Table",id:"alias-table",children:[]},{value:"Other Methods",id:"other-methods",children:[]}]},{value:"Condition Builders",id:"condition-builders",children:[{value:"Where Condition Builder",id:"where-condition-builder",children:[]},{value:"Having Condition Builder",id:"having-condition-builder",children:[]},{value:"Join Condition Builder",id:"join-condition-builder",children:[]}]},{value:"Types",id:"types",children:[{value:"TBaseValue",id:"tbasevalue",children:[]},{value:"TOperator",id:"toperator",children:[]}]}],o={rightToc:c};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"We've talked about how you can build and initialize your database using migrations and seeders. There is also another\naspect of working with databases, which is running database queries to fetch or update your database. "),Object(b.b)("p",null,"Writing queries in different databases, needs you to know the specific syntax of that database system. However, writing\nraw database queries in your code would make it dirty and hard to maintain. There are some database helpers which come\nwith a query builder feature to ease the process of writing queries."),Object(b.b)("h2",{id:"query-builder"},"Query Builder"),Object(b.b)("p",null,"The query builder is upon the ",Object(b.b)("inlineCode",{parentName:"p"},"Builder")," pattern which allows you to glue different parts of your query then it will\nbe converted to a query of that database. This will be done by the ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/database#driver"}),"database drivers"),". Silvie has\na built-in query builder which is configured on the ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/models"}),"Models")," by default to point to the right table belonging\nto the model. "),Object(b.b)("h3",{id:"constructor"},"Constructor"),Object(b.b)("p",null,"To start using a query builder you need to create an instance of it. This can be done by using the ",Object(b.b)("inlineCode",{parentName:"p"},"QueryBuilder"),"\nconstructor which is located at ",Object(b.b)("inlineCode",{parentName:"p"},"silvie/database/builders/query"),". The constructor will accept a table name which is\noptional if you plan not to select data from an actual table."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"tableName?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"import QueryBuilder from 'silvie/database/builders/query';\n\nconst qb = new QueryBuilder('users');\n")),Object(b.b)("h3",{id:"selections"},"Selections"),Object(b.b)("h4",{id:"qbselect"},"qb.select()"),Object(b.b)("p",null,"The basic select method accepts one or more string parameters as column names and adds them to the selection collection."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"...columns")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string[]",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.select('name', 'family', 'age');\nqb.select('phone', 'email');\n// The result will fetch all these 5 columns\n")),Object(b.b)("h4",{id:"qbselectcount"},"qb.selectCount()"),Object(b.b)("p",null,"To select the count of the result set, you can use this method, and you should provide an alias name for the aggregate\ncolumn. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"alias")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.selectCount('users_count');\n")),Object(b.b)("h4",{id:"qbselectaverage"},"qb.selectAverage()"),Object(b.b)("p",null,"You may also want to get the average of column, so you can pass the name of that column, and an alias name for the\naggregate column to this method. Note that the average method only works for numeric columns."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"alias")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.selectAverage('age', 'age_average');\n")),Object(b.b)("h4",{id:"qbselectsum"},"qb.selectSum()"),Object(b.b)("p",null,"This method will select the summation of values of a column. This method accepts a column name and an alias name for the\naggregate column. Note that the sum method only works for numeric columns."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"alias")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.selectSum('balance', 'total_users_balance');\n")),Object(b.b)("h4",{id:"qbselectmin"},"qb.selectMin()"),Object(b.b)("p",null,"This method will select the minimum value of a column. Jus give it a column name and an alias name for the aggregate\ncolumn."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"alias")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.selectMin('games_played', 'minimum_games_played');\n")),Object(b.b)("h4",{id:"qbselectmax"},"qb.selectMax()"),Object(b.b)("p",null,"This method will add an aggregate selection to your query to select the maximum value of a column. You need to give it a\ncolumn name and an alias for the aggregate column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"alias")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.selectMax('balance', 'maximum_user_balance');\n")),Object(b.b)("h4",{id:"qbselectsub"},"qb.selectSub()"),Object(b.b)("p",null,"There are some cases that you need to do a complex query for a single column of your selection. You can pass a query\nbuilder to this method to do the sub selection. Note that your sub query needs to have only one column in its selection."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"queryBuilder")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"alias")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.selectSub(\n    new QueryBuilder('posts')\n        .select('posts.id')\n        .whereColumn('posts.user_id', 'users.id')\n        .orderBy('posts.id', 'desc')\n        .first(), \n    'latest_post_id'\n);\n")),Object(b.b)("h4",{id:"qbselectraw"},"qb.selectRaw()"),Object(b.b)("p",null,"If your database supports raw queries, you will be able to write a raw database query here. You should pass a query\nstring, and a params array which defaults to an empty array ",Object(b.b)("inlineCode",{parentName:"p"},"[]")," if you don't specify it."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"query")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"params?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"#tbasevalue"}),"<TBaseValue[]",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"[]"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.selectRaw(\"CONCAT(`name`, ' ', `family`) AS `fullname`\");\n// Selects the user fullname by concatenating the name and familty columns\n\nqb.selectRaw(\n    '(SELECT COUNT(*) FROM `comments` WHERE `comments`.`user_id` = `users`.`id` AND `comments`.`post_id` = ?) AS `commentes_on_post`', \n    [12]\n);\n// Selects the count of user comments on an specific post \n")),Object(b.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"The raw queries will be added to the final query untouched, so ",Object(b.b)("strong",{parentName:"p"},"use it if you know what you are doing"),"."))),Object(b.b)("h3",{id:"conditions"},"Conditions"),Object(b.b)("p",null,"A query builder needs to have conditions to limit what you are fetching from the database. Here we group conditions into\n3 groups based on what their usage is:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"#where-condition-builder"}),"Where Conditions")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"#having-condition-builder"}),"Having Conditions")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"#join-condition-builder"}),"Join Conditions")," ")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Where conditions")," will specify the query criteria.\n",Object(b.b)("strong",{parentName:"p"},"Having conditions")," will define the query criteria for grouped queries using aggregate functions.\n",Object(b.b)("strong",{parentName:"p"},"Join conditions")," will indicate how two tables or queries should be joined together."),Object(b.b)("p",null,"The QueryBuilder class implements all of ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#where-condition-builder"}),"Where Condition Builder")," methods to let your define\nyour query criteria. It also implements all of ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#having-condition-builder"}),"Having Condition Builder")," methods for you to\nuse them in combination with your group queries. Therefore, you are able to call those methods directly from a query\nbuilder instance. Take a look at the following examples:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const results = await qb.where('name', 'Hannah').get();\n// Returns all users where their name is 'Hannah'\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const results = await qb.whereBetween('age', [20, 32]).get();\n// Returns all users where their age is between 20 and 32\n")),Object(b.b)("p",null,"They also can be used in combination:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const results = await qb.whereLike('name', 'Jo%')\n                        .whereBetween('birthdate', ['1998-01-18', '2020-11-23'])\n                        .where('email_verified', false)\n                        .get();\n// Returns all users where their name starts with 'Jo'\n// and their birthdate is between 1998-01-18 and 2020-11-23\n// and they have not verified their email\n")),Object(b.b)("p",null,"As mentioned before, having condition methods are also available on the query builder instance when you are using groups\nin your queries. Here are a few examples of their usage:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const results = await qb.select('name')\n                        .selectCount('count')\n                        .groupBy('name')\n                        .having('count', '>', 3)\n                        .get();\n// Returns the names that are repeated more than 3 times\n")),Object(b.b)("p",null,"To learn more about available methods and their usage, please read ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#condition-builders"}),"Condition Builders")," of this page."),Object(b.b)("p",null,"There are other conditional methods for querying soft deleted records too. You need to enable soft deletes on your query\nbuilder before you try to use these methods. These methods will add the proper conditions to your queries to indicate\nhow soft deleted records should be treated."),Object(b.b)("h4",{id:"qbwithtrashed"},"qb.withTrashed()"),Object(b.b)("p",null,"This method will allow the query to fetch all records, including soft deleted records."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.withTrashed();\n")),Object(b.b)("h4",{id:"qbonlytrashed"},"qb.onlyTrashed()"),Object(b.b)("p",null,"This method will only fetch soft deleted records."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.onlyTrashed();\n")),Object(b.b)("h4",{id:"qbwithouttrashed"},"qb.withoutTrashed()"),Object(b.b)("p",null,"This method will only fetch records that are not soft deleted. The default behavior of query builder is not fetching\nsoft deleted records."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.withoutTrashed();\n")),Object(b.b)("h3",{id:"order"},"Order"),Object(b.b)("h4",{id:"qborderby"},"qb.orderBy()"),Object(b.b)("p",null,"This method will order the results by a given column. The direction can be specified by the second parameter which\naccepts ",Object(b.b)("inlineCode",{parentName:"p"},"'asc'"),", ",Object(b.b)("inlineCode",{parentName:"p"},"'desc'"),", ",Object(b.b)("inlineCode",{parentName:"p"},"'ASC'")," or ",Object(b.b)("inlineCode",{parentName:"p"},"'DESC'")," as its value. The direction parameter is optional and defaults to ",Object(b.b)("inlineCode",{parentName:"p"},"ASC"),"."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"direction?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"'ASC''"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.orderBy('name');\n// Orders results by an ascending order of 'name' field\n\nqb.orderBy('created_at', 'DESC');\n// Orders results by a descending order of 'created_at' field \n")),Object(b.b)("p",null,"The order methods can be used more than once if you are going to order the results by multiple columns. For example, the\nabove code orders the result by their name and orders the records with the same name, by their creation dates."),Object(b.b)("h4",{id:"qbreorder"},"qb.reorder()"),Object(b.b)("p",null,"This method will clear the previously set orders on the query builder instance. If you pass a column and a direction to it,\nit will set a new order on the query builder. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"direction?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"'ASC''"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.reorder();\n// Clears the query order\n\nqb.reorder('family');\n// Clears order and sets a new order by 'family' field\n")),Object(b.b)("h4",{id:"qbshuffle"},"qb.shuffle()"),Object(b.b)("p",null,"This method will order the results randomly which results to a shuffled result."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"seed?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"''"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.shuffle();\n")),Object(b.b)("h4",{id:"qborderbyraw"},"qb.orderByRaw()"),Object(b.b)("p",null,"You can write more complex order queries by using this method. This method will accept a query string and its\nparameters, And will add this query to your order clause untouched."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"query")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"params?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<TBaseValue",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"[]"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.orderByRaw(\n    '(SELECT COUNT(*) FROM `posts` WHERE `posts`.`user_id` = `users`.`id`) DESC'\n);\n")),Object(b.b)("p",null,"For example, the above code will order the result by post count of each user. This code is just an example and has a\nvery low performance, since it will run that sub query for each record."),Object(b.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"The raw queries will be added to the final query untouched, so ",Object(b.b)("strong",{parentName:"p"},"use it if you know what you are doing"),"."))),Object(b.b)("h3",{id:"group"},"Group"),Object(b.b)("h4",{id:"qbgroupby"},"qb.groupBy()"),Object(b.b)("p",null,"This method will group the results with the given columns. It is often used with the aggregate selections."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"...columns")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string[]",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript",metastring:"{2}","{2}":!0}),"const userPostCount = await qb.selectCount('post_count')\n                              .groupBy('user_id')\n                              .get();\n")),Object(b.b)("p",null,"The above code will return the count of posts for each user."),Object(b.b)("h4",{id:"qbgroupbyraw"},"qb.groupByRaw()"),Object(b.b)("p",null,"This method will add a raw query to the group clause."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"query")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"params?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<TBaseValue",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"[]"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript",metastring:"{3}","{3}":!0}),"const userDailyPosts = qb.selectCount('daily_posts')\n                         .join('posts', 'posts.user_id', 'users_id')\n                         .groupByRaw('`users`.`id`, DATE(`posts`.`created_at`)')\n                         .where('user.id', 2)\n                         .get();\n")),Object(b.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"The raw queries will be added to the final query untouched, so ",Object(b.b)("strong",{parentName:"p"},"use it if you know what you are doing"),"."))),Object(b.b)("h3",{id:"offset"},"Offset"),Object(b.b)("h4",{id:"qboffset"},"qb.offset()"),Object(b.b)("p",null,"This method will be used to skip a specified number of records and fetch the rest."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"count")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.offset(10);\n// This query won't fetch the first 10 records\n")),Object(b.b)("h4",{id:"qbskip"},"qb.skip()"),Object(b.b)("p",null,"This is an equivalent of ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#qboffset"}),"offset()")," method."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"count")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.skip(10);\n// This query won't fetch the first 10 records\n")),Object(b.b)("h3",{id:"limit"},"Limit"),Object(b.b)("h4",{id:"qblimit"},"qb.limit()"),Object(b.b)("p",null,"This method will be used to limit the number of records that are going to be fetched."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"count")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.limit(7);\n// This will return the first 7 records\n\nqb.offset(10).limit(5);\n// This will skip the first 10 records\n// And returns the next 5 records\n")),Object(b.b)("h4",{id:"qbtake"},"qb.take()"),Object(b.b)("p",null,"This is an equivalent of ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#qblimit"}),"limit()")," method."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"count")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.take(7);\n// This will return the first 7 records\n\nqb.offset(10).take(5);\n// This will skip the first 10 records\n// And returns the next 5 records\n")),Object(b.b)("h3",{id:"joins"},"Joins"),Object(b.b)("h4",{id:"qbjoin"},"qb.join()"),Object(b.b)("p",null,"This method will do an ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.w3resource.com/sql/joins/perform-an-inner-join.php"}),"INNER JOIN")," between two tables."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"table")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column1")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column2?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"alias?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("p",null,"If the ",Object(b.b)("inlineCode",{parentName:"p"},"table")," parameter is a ",Object(b.b)("inlineCode",{parentName:"p"},"string"),", it will try to join that with an actual table. However, it is possible to do a\njoin with another ",Object(b.b)("inlineCode",{parentName:"p"},"QueryBuilder")," which will be assumed as a sub query."),Object(b.b)("p",null,"If the ",Object(b.b)("inlineCode",{parentName:"p"},"column1")," parameter is a ",Object(b.b)("inlineCode",{parentName:"p"},"Function"),", it will be used as a callback function which will get a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/query-builders#join-condition-builder"}),"JoinConditionBuilder")," as its only parameter, and you need to specify the join condition criteria\nwith that instance of join condition builder. "),Object(b.b)("p",null,"If you pass a ",Object(b.b)("inlineCode",{parentName:"p"},"string")," to the ",Object(b.b)("inlineCode",{parentName:"p"},"column1")," parameter, It will be assumed as a column name and expects you specify the next\nparameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter is a ",Object(b.b)("inlineCode",{parentName:"p"},"string")," and its value depends on ",Object(b.b)("inlineCode",{parentName:"p"},"column2")," parameter. If you specify a value for the\n",Object(b.b)("inlineCode",{parentName:"p"},"column2"),", This parameter will be treated as an actual ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/query-builders#toperator"}),"operator"),". If you don't specify a\n",Object(b.b)("inlineCode",{parentName:"p"},"column2"),", the ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the ",Object(b.b)("inlineCode",{parentName:"p"},"column2")," parameter and operator will take its default which\nis ",Object(b.b)("inlineCode",{parentName:"p"},"="),"."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"alias")," parameter will set an alias for the joined table to be used as an abbreviation in other query parts."),Object(b.b)("p",null,"This specification will apply to the rest of join methods as mention below."),Object(b.b)("h4",{id:"qbleftjoin"},"qb.leftJoin()"),Object(b.b)("p",null,"This method will do a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.w3resource.com/sql/joins/perform-a-left-join.php"}),"LEFT JOIN")," between two tables. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"table")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column1")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column2?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"alias?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("p",null,"For more information about what these parameters do, please read ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/query-builders#qbjoin"}),"join()")," method description."),Object(b.b)("h4",{id:"qbrightjoin"},"qb.rightJoin()"),Object(b.b)("p",null,"This method will do a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.w3resource.com/sql/joins/perform-a-right-join.php"}),"RIGHT JOIN")," between two tables. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"table")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column1")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column2?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"alias?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("p",null,"For more information about what these parameters do, please read ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/query-builders#qbjoin"}),"join()")," method description."),Object(b.b)("h4",{id:"qbcrossjoin"},"qb.crossJoin()"),Object(b.b)("p",null,"This method will do a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.w3resource.com/sql/joins/cross-join.php"}),"CROSS JOIN")," between two tables. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"table")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column1")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column2?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"alias?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("p",null,"For more information about what these parameters do, please read ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/query-builders#qbjoin"}),"join()")," method description."),Object(b.b)("h4",{id:"qbouterjoin"},"qb.outerJoin()"),Object(b.b)("p",null,"This method will do an ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.w3resource.com/sql/joins/perform-an-outer-join.php"}),"OUTER JOIN")," between two tables. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"table")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column1")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column2?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"alias?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("p",null,"For more information about what these parameters do, please read ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/query-builders#qbjoin"}),"join()")," method description."),Object(b.b)("h3",{id:"unions"},"Unions"),Object(b.b)("h4",{id:"qbunion"},"qb.union()"),Object(b.b)("p",null,"This method will add the results of a query builder to the end of the current query builder. Note that the columns, and\ntheir data types must be the same. The union will remove the duplicate records from your results by default, unless you\npass a ",Object(b.b)("inlineCode",{parentName:"p"},"true")," to the ",Object(b.b)("inlineCode",{parentName:"p"},"all")," parameter."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"queryBuilder")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"all?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"false"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.select('name', 'family').union(\n    new QueryBuilder('admins').select('name', 'family'),\n    true\n);\n")),Object(b.b)("h4",{id:"qbunionraw"},"qb.unionRaw()"),Object(b.b)("p",null,"This method will be used when you want to write a custom select for the union clause. It accepts a query string, and a\nparameter array. The union will remove the duplicate records from your results by default, unless you\npass a ",Object(b.b)("inlineCode",{parentName:"p"},"true")," to the ",Object(b.b)("inlineCode",{parentName:"p"},"all")," parameter."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"query")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"params?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<TBaseValue",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"[]")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"all?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type"}),"<boolean",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"false"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.select('name', 'family').union(\n    'SELECT `name`, `family` FROM `admins` WHERE `admins`.`id` > ?',\n    [10],\n    true\n);\n")),Object(b.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"The raw queries will be added to the final query untouched, so ",Object(b.b)("strong",{parentName:"p"},"use it if you know what you are doing"),"."))),Object(b.b)("h3",{id:"fetch"},"Fetch"),Object(b.b)("h4",{id:"qbget"},"qb.get()"),Object(b.b)("p",null,"This method will execute the query and returns an array of results. "),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const results = await qb.get();\n")),Object(b.b)("h4",{id:"qbfirst"},"qb.first()"),Object(b.b)("p",null,"This method will execute the query and returns the first entry of the result set. This is done by temporarily limiting\nthe query itself. You may get a ",Object(b.b)("inlineCode",{parentName:"p"},"null")," if there was nothing found within the query criteria."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const result = await qb.first();\n")),Object(b.b)("h4",{id:"qbpluck"},"qb.pluck()"),Object(b.b)("p",null,"Pluck method will return an array containing the values of a given column. It also will return a hash table if you\nspecify a key column. This method will retrieve the data from the database and maps the results into an array or reduces\nit into a hash table. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"keyColumn")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"valueColumn?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"overwrite")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type"}),"<boolean",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"false"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const userIds = await qb.pluck('id');\n// Returns an array of user ids\n\nconst userBalances = await qb.pluck('id', 'balance');\n// Returns an object with 'id' keys and 'balance' values\n")),Object(b.b)("p",null,"When you specify a value column and expecting the method to return a hash table, by default it will throw an error if it\nfaces a duplicate key. You can set the ",Object(b.b)("inlineCode",{parentName:"p"},"overwrite")," parameter to ",Object(b.b)("inlineCode",{parentName:"p"},"true")," to overwrite the values for existing keys."),Object(b.b)("h3",{id:"existence"},"Existence"),Object(b.b)("h4",{id:"qbexists"},"qb.exists()"),Object(b.b)("p",null,"This method will return ",Object(b.b)("inlineCode",{parentName:"p"},"true")," if it finds one or more records in your query criteria."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript",metastring:"{2}","{2}":!0}),"const userExists = await qb.where('phone', '+18005551234')\n                           .exists();\n")),Object(b.b)("h4",{id:"qbdoesntexist"},"qb.doesntExist()"),Object(b.b)("p",null,"This method will return ",Object(b.b)("inlineCode",{parentName:"p"},"true")," if there were no records in the query criteria."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript",metastring:"{2}","{2}":!0}),"const isNewUser = await qb.where('phone', '+18005551234')\n                          .doesntExist();\n")),Object(b.b)("h3",{id:"aggregates"},"Aggregates"),Object(b.b)("h4",{id:"qbcount"},"qb.count()"),Object(b.b)("p",null,"This method will return the count of database records matching your query criteria. "),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const usersCount = await qb.count();\n")),Object(b.b)("h4",{id:"qbaverage"},"qb.average()"),Object(b.b)("p",null,"This method will return the average of a given column. This only works for a numeric column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const averageAge = await qb.average('age');\n")),Object(b.b)("h4",{id:"qbsum"},"qb.sum()"),Object(b.b)("p",null,"This method will return the summation of a given column. This only works for a numeric column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const totalBalance = await qb.sum('balance');\n")),Object(b.b)("h4",{id:"qbmin"},"qb.min()"),Object(b.b)("p",null,"This method will return the minimum value of a given column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const minimumAge = await qb.min('age');\n")),Object(b.b)("h4",{id:"qbmax"},"qb.max()"),Object(b.b)("p",null,"This method will return the maximum value of a given column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const maximumBalance = await qb.max('balance');\n")),Object(b.b)("h3",{id:"update"},"Update"),Object(b.b)("h4",{id:"qbupdate"},"qb.update()"),Object(b.b)("p",null,"This method will update the records matching your query with the given data. The object keys will be used as column\nnames, and their values will be set to them. This method will update all records with the same data. If you want to\nupdate multiple records with different data, you need to use ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#qbbulkupdate"}),"bulkUpdate()")," method. "),Object(b.b)("p",null,"Update will also update the ",Object(b.b)("inlineCode",{parentName:"p"},"updated_at")," column to the current date and time. This can be disabled by passing a ",Object(b.b)("inlineCode",{parentName:"p"},"true"),"\nto ",Object(b.b)("inlineCode",{parentName:"p"},"silent")," parameter."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"data")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object"}),"<object",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"silent?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type"}),"<boolean",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"false"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"new QueryBuilder('users').where('id', 10).update({\n    name: 'Silvie'\n});\n")),Object(b.b)("h4",{id:"qbbulkupdate"},"qb.bulkUpdate()"),Object(b.b)("p",null,"The bulk update will be used to update multiple records with different data. This is handy when reducing the update\nqueries in your application if you are doing multiple updates in a row. "),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"data")," parameter is the dataset to be used for the update, and it must contain the keys to search for their\ncorresponding records."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"keys")," parameter is an array of key names. This will indicate which keys of the dataset should be used to find each\nrecord. The keys that will not be mentioned in this parameter will be used to update the record."),Object(b.b)("p",null,"Update will also update the ",Object(b.b)("inlineCode",{parentName:"p"},"updated_at")," column to the current date and time. This can be disabled by passing a ",Object(b.b)("inlineCode",{parentName:"p"},"true"),"\nto ",Object(b.b)("inlineCode",{parentName:"p"},"silent")," parameter."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"data")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"keys")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"silent")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type"}),"<boolean",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"new QueryBuilder('users').bulkUpdate(\n    [\n        {\n            id: 2,\n            name: 'Sarah',\n            family: 'Connor'\n        },\n        {\n            id: 52,\n            name: 'Matthew',\n            age: 33\n        },\n        {\n            id: 21,\n            balance: 21000\n        }\n    ],\n    ['id']\n);\n")),Object(b.b)("p",null,"The above code will update the ",Object(b.b)("inlineCode",{parentName:"p"},"name")," and the ",Object(b.b)("inlineCode",{parentName:"p"},"family")," of the user ",Object(b.b)("inlineCode",{parentName:"p"},"2"),", the ",Object(b.b)("inlineCode",{parentName:"p"},"name")," and the ",Object(b.b)("inlineCode",{parentName:"p"},"age")," of user ",Object(b.b)("inlineCode",{parentName:"p"},"52")," and\nthe balance of user ",Object(b.b)("inlineCode",{parentName:"p"},"21"),". "),Object(b.b)("h3",{id:"delete"},"Delete"),Object(b.b)("h4",{id:"qbdelete"},"qb.delete()"),Object(b.b)("p",null,"This method will delete the records matching the query criteria."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await new QueryBuilder('users').where('age', '<', 18).delete();\n// This will delete all underaged users\n")),Object(b.b)("h4",{id:"qbusesoftdeletes"},"qb.useSoftDeletes()"),Object(b.b)("p",null,"This method will just mark the query builder to be able to use ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/query-builders#qbsoftdelete"}),"softDelete()")," and\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/query-builders#qbrestore"}),"restore()")," methods. You need to call this method before calling those methods."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.useSoftDeletes();\n")),Object(b.b)("h4",{id:"qbsoftdelete"},"qb.softDelete()"),Object(b.b)("p",null,"This method will soft delete the records matching the query criteria. Soft deleting must be enabled on the table. This\ncan be done by adding a ",Object(b.b)("inlineCode",{parentName:"p"},"deleted_at")," timestamp field to the table. If you are going to change the name of this field,\nyou need needs to indicate the new name in the query builder options which can be done through the\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/query-builders#qbextend"}),"extend()")," method. You also need to call ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/query-builders#qbusesoftdeletes"}),"useSoftDeletes()"),"\nmethod before using this one."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await new QueryBuilder('users').where('id', 12).softDelete();\n// This will soft delete the user with id = 12\n")),Object(b.b)("h4",{id:"qbrestore"},"qb.restore()"),Object(b.b)("p",null,"This method will be used to restore soft deleted records. This is done by setting the soft delete field to ",Object(b.b)("inlineCode",{parentName:"p"},"null"),".\nBefore using this method, you should enable soft deleting on your table, and on your query builder. The default soft\ndelete column name is ",Object(b.b)("inlineCode",{parentName:"p"},"deleted_at")," which can be changed by ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/query-builders#qbextend"}),"extend()"),". You also need to call\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/query-builders#qbusesoftdeletes"}),"useSoftDeletes()")," before using this one."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await new QueryBuilder('users').where('id', 12).restore();\n// This will restore the soft deleted user with id = 12\n")),Object(b.b)("h3",{id:"insert"},"Insert"),Object(b.b)("h4",{id:"qbinsert"},"qb.insert()"),Object(b.b)("p",null,"This method will insert a dataset into the database table. The ",Object(b.b)("inlineCode",{parentName:"p"},"ignore")," parameter indicates weather to ignore duplicate\nkeys or not. Otherwise, it will throw a database error if you are inserting a duplicate key."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"data")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"ignore?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type"}),"<boolean",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"false"))),Object(b.b)("p",null,"The keys of the first object in the array will be used to form the insertion query, so you need to keep those objects\nintegrated. The keys must be same as the first one. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"If you have other keys that doesn't exist on the first object, they won't be used."),Object(b.b)("li",{parentName:"ul"},"If the keys of the first object are missing from other objects it will throw an error.")),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"new QueryBuilder('users').insert([\n    {\n        name: 'Hossein',\n        family: 'Maktoobian',\n        age: 23,    \n    },\n    {\n    \n        name: 'John',\n        family: 'Doe',\n        age: 45,\n    },\n]);\n")),Object(b.b)("h3",{id:"alias-table"},"Alias Table"),Object(b.b)("h4",{id:"qbfromaliastable"},"qb.fromAliasTable()"),Object(b.b)("p",null,"If you don't want to select your data from an actual table, it is possible to specify another query builder to use it as\nthe reference table of the query builder. The alias parameter will be an alias name for the sub query to be used as\nreference to the sub query columns in other query parts."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"queryBuilder")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"alias")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript",metastring:"{2}","{2}":!0}),"new QueryBuilder()\n    .fromAliasTable(\n        new QueryBuilder('users').select('id', 'created_at'),\n        'u'\n    )\n    .where('u.id', '<', 10)\n    .get();\n")),Object(b.b)("h3",{id:"other-methods"},"Other Methods"),Object(b.b)("h4",{id:"qbclone"},"qb.clone()"),Object(b.b)("p",null,"This method will create a fresh independent copy of the query builder instance."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const qbc = qb.clone();\n")),Object(b.b)("h4",{id:"qbextend"},"qb.extend()"),Object(b.b)("p",null,"This method can be used to set options on the query builder instance. Use this method if you are familiar with the\noptions structure and their valid values. Otherwise, just use the provided helper methods of the query builder."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"data")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object"}),"<object",">"))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.extend({\n    softDeleteTimestamp: 'removed_at', // Change default soft delete column name\n    useTimestamps: false, // Disable using create and update timestamps\n    processData: (data) => {  // Register a data processor\n        console.log(data);\n        return data;\n    }\n});\n")),Object(b.b)("p",null,"The full query builder options explanation will be added to documentation later."),Object(b.b)("h2",{id:"condition-builders"},"Condition Builders"),Object(b.b)("p",null,"Condition builders are a way to create complex conditions by calling their methods. They will be transpiled into valid\ndatabase query conditions using the database driver. There are different places that you need to specify conditions for."),Object(b.b)("p",null,"The first one is where you are going to limit the query criteria by defining conditions on its normal fields, which you\nneed to use ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#where-condition-builder"}),"Where Condition Builder"),"."),Object(b.b)("p",null,"The second case is where you want to limit the query criteria, but you want to set conditions on the aggregate fields\nthat are going to be in your query, which you need to use ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#having-condition-builder"}),"Having Condition Builder"),"."),Object(b.b)("p",null,"The last case is where you are joining tables or queries, and you want to specify when two records should be joined. In\nthat case, you can use the simple condition parameters in the join method which only checks for equality. Otherwise, you\ncan use a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#join-condition-builder"}),"Join Condition Builder")," to create more complex conditions on your joins."),Object(b.b)("div",{className:"admonition admonition-info alert alert--info"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"The methods described in this section, will be tied together with ",Object(b.b)("inlineCode",{parentName:"p"},"AND")," operator. This can be changed by using the ",Object(b.b)("inlineCode",{parentName:"p"},"OR"),"\nversion of these methods. It just gets a ",Object(b.b)("inlineCode",{parentName:"p"},"or")," prefix, but keeps the ",Object(b.b)("strong",{parentName:"p"},"camelCase")," naming convention. For example,\n",Object(b.b)("inlineCode",{parentName:"p"},"whereBetween()")," method has another version named ",Object(b.b)("inlineCode",{parentName:"p"},"orWhereBetween()"),", and ",Object(b.b)("inlineCode",{parentName:"p"},"havingNull()")," method will be\n",Object(b.b)("inlineCode",{parentName:"p"},"orHavingNull()"),", etc.   "))),Object(b.b)("h3",{id:"where-condition-builder"},"Where Condition Builder"),Object(b.b)("p",null,"This type of conditions will be applied to the query and limits its criteria. This condition builder will be used when\nyou want to group conditions together in another condition clause, to change their precedence. In that case, you need to\npass a ",Object(b.b)("inlineCode",{parentName:"p"},"Function")," to ",Object(b.b)("inlineCode",{parentName:"p"},"where()")," or ",Object(b.b)("inlineCode",{parentName:"p"},"orWhere()")," methods which accepts a where condition builder."),Object(b.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"All of ",Object(b.b)("inlineCode",{parentName:"p"},"WhereConditionBuilder")," methods are available on the ",Object(b.b)("inlineCode",{parentName:"p"},"QueryBuilder")," class too. Since they need to be applied on a\nquery in the first place. "))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"WhereConditionBuilder")," class can be found at ",Object(b.b)("inlineCode",{parentName:"p"},"silvie/database/builders/condition/where"),"."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"import WhereConditionBuilder from 'silvie/database/builders/condition/where';\n\nconst wcb = new WhereConditionBuilder();\n")),Object(b.b)("p",null,"However, you usually don't need to create an instance, the common use case of this class is through the ",Object(b.b)("inlineCode",{parentName:"p"},"where()")," or\n",Object(b.b)("inlineCode",{parentName:"p"},"orWhere()")," method of the query builder class."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.where((wcb) => {\n    // Configure the condition builder\n});\n")),Object(b.b)("h4",{id:"wcbwhere"},"wcb.where()"),Object(b.b)("p",null,"This method will add a condition to check a column with a value. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"You are able to pass a ",Object(b.b)("inlineCode",{parentName:"p"},"Function")," to the ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter. This will be callback function which will get a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#where-condition-builder"}),"hereConditionBuilder")," instance, and the queries made with that condition builder will be\ngrouped together in the final query."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.where('username', 'hmak')\n   .orWhere('username', 'hmak-me')\n// Restricts the 'username' field to be 'hmak' ro 'hmak-me'\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.where((cb) => {\n    cb.whereNotNull('email')\n      .where('email_verified', false);\n}).orWhere((cb) => {\n    cb.whereNotNull('phone')\n      .where('phone_verified', false);\n});\n// Restricts to the users who\n// have an email and not verified it\n// or have a phone and not verified it\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.where(\n    new QueryBuilder('posts')\n        .selectCount('post_count')\n        .whereColumn('posts.user_id', 'users.id')\n        .groupBy('posts.user_id'),\n    '>=',\n    2\n);\n// Restricts to those users who\n// submitted between 2 or more posts\n")),Object(b.b)("h4",{id:"wcbwherenull"},"wcb.whereNull()"),Object(b.b)("p",null,"This method will add a condition which its operand should be null. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereNull('email');\n// Restricts to those users who\n// don't have an email\n")),Object(b.b)("h4",{id:"wcbwherenotnull"},"wcb.whereNotNull()"),Object(b.b)("p",null,"This method will add a condition which its operand should not be null."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereNotNull('email');\n// Restricts to those users who\n// have an email address\n")),Object(b.b)("h4",{id:"wcbwherebetween"},"wcb.whereBetween()"),Object(b.b)("p",null,"This method will add a condition which its operand should be between two values. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"values")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array containing two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries, or a query builder instance which\nreturns a single column and two rows."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereBetween('age', [10, 20]);\n// Restricts to those users aged between 10 and 20\n")),Object(b.b)("h4",{id:"wcbwherenotbetween"},"wcb.whereNotBetween()"),Object(b.b)("p",null,"This method will add a condition which its operand should not be between two values. The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array\nwith two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"values")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array containing two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries, or a query builder instance which\nreturns a single column and two rows."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereNotBetween('birthdate', ['2020-01-01', '2020-12-31']);\n// Restricts to those users that\n// wasn't born in 2020\n")),Object(b.b)("h4",{id:"wcbwherein"},"wcb.whereIn()"),Object(b.b)("p",null,"This method will add a condition which its operand should be present in a set of values. The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be\nan array of ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue"),"s. This array should contain one or more entries in it."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"values")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array containing two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries, or a query builder instance which\nreturns a single column."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereIn('name', ['Mike', 'Michael', 'Micah']);\n// Restricts to those users who\n// their name is listed in the array\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereIn(\n    'id',\n    new QueryBuilder('premium_users')\n        .select('user_id')\n);\n// Restricts to those users who\n// are listed in premium users\n")),Object(b.b)("h4",{id:"wcbwherenotin"},"wcb.whereNotIn()"),Object(b.b)("p",null,"This method will add a condition which its operand should not be present in a set of values. The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be\nan array of ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue"),"s. This array should contain one or more entries in it."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"values")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array containing two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries, or a query builder instance which\nreturns a single column."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereNotIn('id', [1, 2]);\n// Restricts to those users who\n// their id is not 1 or 2\n")),Object(b.b)("h4",{id:"wcbwherelike"},"wcb.whereLike()"),Object(b.b)("p",null,"This method will add a condition which its operand should be like a specified pattern. The pattern is the same pattern\nused in SQL which you can define wild cards with ",Object(b.b)("inlineCode",{parentName:"p"},"'%'")," and single unknown characters with ",Object(b.b)("inlineCode",{parentName:"p"},"'_'"),"."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereLike('family', '%son')\n   .orWhereLike('family', 'Jack%');\n// Restricts to those users who their family name\n// starts with 'Jack' or ends with 'son'\n")),Object(b.b)("h4",{id:"wcbwherenotlike"},"wcb.whereNotLike()"),Object(b.b)("p",null,"This method will add a condition which its operand should be like a specified pattern. The pattern is the same pattern\nused in SQL which you can define wild cards with ",Object(b.b)("inlineCode",{parentName:"p"},"'%'")," and single unknown characters with ",Object(b.b)("inlineCode",{parentName:"p"},"'_'"),"."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereNotLike('family', 'S___h');\n// Restricts to those users who their family name\n// is not a 5 letter which start with an 'S' and ending with 'h'\n")),Object(b.b)("h4",{id:"wcbwherecolumn"},"wcb.whereColumn()"),Object(b.b)("p",null,"This method will add a condition to compare two columns values with each other."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"firstColumn")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"secondColumn?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("p",null,"If you don't specify a ",Object(b.b)("inlineCode",{parentName:"p"},"secondColumn"),", The value of the ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the second column, and\nthe operator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereColumn('family', '!=', 'name');\n// Restricts to those users who their \n// family is not equal to their name\n")),Object(b.b)("h4",{id:"wcbwheredate"},"wcb.whereDate()"),Object(b.b)("p",null,"This method will add a condition for the date part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereDate('birthdate', '>=', '2000-01-01');\n// Restricts to those uses who was born after 2000\n")),Object(b.b)("h4",{id:"wcbwhereyear"},"wcb.whereYear()"),Object(b.b)("p",null,"This method will add a condition for the year part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereYear('birthdate', '<', '2000');\n// Restricts to those uses who was born before 2000\n")),Object(b.b)("h4",{id:"wcbwheremonth"},"wcb.whereMonth()"),Object(b.b)("p",null,"This method will add a condition for the month part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereMonth('birthdate', 3);\n// Restricts to those uses who was born in March\n")),Object(b.b)("h4",{id:"wcbwhereday"},"wcb.whereDay()"),Object(b.b)("p",null,"This method will add a condition for the day part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereDay('birthdate', 18);\n// Restricts to those uses who was born \n// in the 18th day of the month\n")),Object(b.b)("h4",{id:"wcbwheretime"},"wcb.whereTime()"),Object(b.b)("p",null,"This method will add a condition for the time part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereTime('created_at', '>=', '00:00')\n   .whereTime('created_at', '<=', '06:00');\n// Restricts to those uses who registered between 00:00 and 06:00\n")),Object(b.b)("h4",{id:"wcbwhereraw"},"wcb.whereRaw()"),Object(b.b)("p",null,"This method will add a raw query as a condition to your final query. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"query")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"params?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<TBaseValue",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"[]"))),Object(b.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"The raw queries will be added to the final query untouched, so ",Object(b.b)("strong",{parentName:"p"},"use it if you know what you are doing"),"."))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"wcb.whereRaw('id % 7 = 0')\n   .orWhereRaw('id % 9 = 0');\n// Restricts to those user with an id divisible by 7 or 9 :D\n")),Object(b.b)("h3",{id:"having-condition-builder"},"Having Condition Builder"),Object(b.b)("p",null,"This type of conditions will be applied to the grouped queries and limits their criteria. This condition builder will be\nused when you want to group ",Object(b.b)("inlineCode",{parentName:"p"},"having")," conditions together in another having condition clause, to change their precedence.\nIn that case, you need to pass a ",Object(b.b)("inlineCode",{parentName:"p"},"Function")," to ",Object(b.b)("inlineCode",{parentName:"p"},"having()")," or ",Object(b.b)("inlineCode",{parentName:"p"},"orHaving()")," methods which accepts a where condition builder."),Object(b.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"All of ",Object(b.b)("inlineCode",{parentName:"p"},"HavingConditionBuilder")," methods are available on the ",Object(b.b)("inlineCode",{parentName:"p"},"QueryBuilder")," class too. Since they need to be applied on a\nquery in the first place. "))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"HavingConditionBuilder")," class can be found at ",Object(b.b)("inlineCode",{parentName:"p"},"silvie/database/builders/condition/having"),"."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"import HavingConditionBuilder from 'silvie/database/builders/condition/having';\n\nconst hcb = new HavingConditionBuilder();\n")),Object(b.b)("p",null,"Most of the times, you don't need to create an instance, the common use case of this class is through the ",Object(b.b)("inlineCode",{parentName:"p"},"where()")," or\n",Object(b.b)("inlineCode",{parentName:"p"},"orWhere()")," method of the query builder class."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.having((hcb) => {\n    // Configure the condition builder\n});\n")),Object(b.b)("h4",{id:"hcbhaving"},"hcb.having()"),Object(b.b)("p",null,"This method will add a condition to check a column with a value. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"You are able to pass a ",Object(b.b)("inlineCode",{parentName:"p"},"Function")," to the ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter. This will be callback function which will get a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#having-condition-builder"}),"HavingConditionBuilder")," instance, and the queries made with that condition builder will be\ngrouped together in the final query."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.having('username', 'hmak')\n   .orHaving('username', 'hmak-me')\n// Restricts the 'username' field to be 'hmak' ro 'hmak-me'\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.having((cb) => {\n    cb.havingNotNull('email')\n      .having('email_verified', false);\n}).orHaving((cb) => {\n    cb.havingNotNull('phone')\n      .having('phone_verified', false);\n});\n// Restricts to the users who\n// have an email and not verified it\n// or have a phone and not verified it\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.having(\n    new QueryBuilder('posts')\n        .selectCount('post_count')\n        .havingColumn('posts.user_id', 'users.id')\n        .groupBy('posts.user_id'),\n    '>=',\n    2\n);\n// Restricts to those users who\n// submitted between 2 or more posts\n")),Object(b.b)("h4",{id:"hcbhavingnull"},"hcb.havingNull()"),Object(b.b)("p",null,"This method will add a condition which its operand should be null. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingNull('email');\n// Restricts to those users who\n// don't have an email\n")),Object(b.b)("h4",{id:"hcbhavingnotnull"},"hcb.havingNotNull()"),Object(b.b)("p",null,"This method will add a condition which its operand should not be null."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingNotNull('email');\n// Restricts to those users who\n// have an email address\n")),Object(b.b)("h4",{id:"hcbhavingbetween"},"hcb.havingBetween()"),Object(b.b)("p",null,"This method will add a condition which its operand should be between two values. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"values")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array containing two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries, or a query builder instance which\nreturns a single column and two rows."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingBetween('age', [10, 20]);\n// Restricts to those users aged between 10 and 20\n")),Object(b.b)("h4",{id:"hcbhavingnotbetween"},"hcb.havingNotBetween()"),Object(b.b)("p",null,"This method will add a condition which its operand should not be between two values. The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array\nwith two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"values")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array containing two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries, or a query builder instance which\nreturns a single column and two rows."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingNotBetween('birthdate', ['2020-01-01', '2020-12-31']);\n// Restricts to those users that\n// wasn't born in 2020\n")),Object(b.b)("h4",{id:"hcbhavingin"},"hcb.havingIn()"),Object(b.b)("p",null,"This method will add a condition which its operand should be present in a set of values. The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be\nan array of ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue"),"s. This array should contain one or more entries in it."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"values")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array containing two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries, or a query builder instance which\nreturns a single column."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingIn('name', ['Mike', 'Michael', 'Micah']);\n// Restricts to those users who\n// their name is listed in the array\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingIn(\n    'id',\n    new QueryBuilder('premium_users')\n        .select('user_id')\n);\n// Restricts to those users who\n// are listed in premium users\n")),Object(b.b)("h4",{id:"hcbhavingnotin"},"hcb.havingNotIn()"),Object(b.b)("p",null,"This method will add a condition which its operand should not be present in a set of values. The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be\nan array of ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue"),"s. This array should contain one or more entries in it."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"values")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array containing two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries, or a query builder instance which\nreturns a single column."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingNotIn('id', [1, 2]);\n// Restricts to those users who\n// their id is not 1 or 2\n")),Object(b.b)("h4",{id:"hcbhavinglike"},"hcb.havingLike()"),Object(b.b)("p",null,"This method will add a condition which its operand should be like a specified pattern. The pattern is the same pattern\nused in SQL which you can define wild cards with ",Object(b.b)("inlineCode",{parentName:"p"},"'%'")," and single unknown characters with ",Object(b.b)("inlineCode",{parentName:"p"},"'_'"),"."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingLike('family', '%son')\n   .orHavingLike('family', 'Jack%');\n// Restricts to those users who their family name\n// starts with 'Jack' or ends with 'son'\n")),Object(b.b)("h4",{id:"hcbhavingnotlike"},"hcb.havingNotLike()"),Object(b.b)("p",null,"This method will add a condition which its operand should be like a specified pattern. The pattern is the same pattern\nused in SQL which you can define wild cards with ",Object(b.b)("inlineCode",{parentName:"p"},"'%'")," and single unknown characters with ",Object(b.b)("inlineCode",{parentName:"p"},"'_'"),"."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingNotLike('family', 'S___h');\n// Restricts to those users who their family name\n// is not a 5 letter which start with an 'S' and ending with 'h'\n")),Object(b.b)("h4",{id:"hcbhavingcolumn"},"hcb.havingColumn()"),Object(b.b)("p",null,"This method will add a condition to compare two columns values with each other."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"firstColumn")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"secondColumn?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("p",null,"If you don't specify a ",Object(b.b)("inlineCode",{parentName:"p"},"secondColumn"),", The value of the ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the second column, and\nthe operator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingColumn('family', '!=', 'name');\n// Restricts to those users who their \n// family is not equal to their name\n")),Object(b.b)("h4",{id:"hcbhavingdate"},"hcb.havingDate()"),Object(b.b)("p",null,"This method will add a condition for the date part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingDate('birthdate', '>=', '2000-01-01');\n// Restricts to those uses who was born after 2000\n")),Object(b.b)("h4",{id:"hcbhavingyear"},"hcb.havingYear()"),Object(b.b)("p",null,"This method will add a condition for the year part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingYear('birthdate', '<', '2000');\n// Restricts to those uses who was born before 2000\n")),Object(b.b)("h4",{id:"hcbhavingmonth"},"hcb.havingMonth()"),Object(b.b)("p",null,"This method will add a condition for the month part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingMonth('birthdate', 3);\n// Restricts to those uses who was born in March\n")),Object(b.b)("h4",{id:"hcbhavingday"},"hcb.havingDay()"),Object(b.b)("p",null,"This method will add a condition for the day part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingDay('birthdate', 18);\n// Restricts to those uses who was born \n// in the 18th day of the month\n")),Object(b.b)("h4",{id:"hcbhavingtime"},"hcb.havingTime()"),Object(b.b)("p",null,"This method will add a condition for the time part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingTime('created_at', '>=', '00:00')\n   .havingTime('created_at', '<=', '06:00');\n// Restricts to those uses who registered between 00:00 and 06:00\n")),Object(b.b)("h4",{id:"hcbhavingraw"},"hcb.havingRaw()"),Object(b.b)("p",null,"This method will add a raw query as a condition to your final query. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"query")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"params?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<TBaseValue",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"[]"))),Object(b.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"The raw queries will be added to the final query untouched, so ",Object(b.b)("strong",{parentName:"p"},"use it if you know what you are doing"),"."))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"hcb.havingRaw('id % 7 = 0')\n   .orHavingRaw('id % 9 = 0');\n// Restricts to those user with an id divisible by 7 or 9\n")),Object(b.b)("h3",{id:"join-condition-builder"},"Join Condition Builder"),Object(b.b)("p",null,"This type of condition builder will be used when you want to set a complex condition on a join method. Usually, there\nwill be a column equality comparison for a join method to work, but if you want more than a single condition, or it is\nmore complicated, just give your ",Object(b.b)("inlineCode",{parentName:"p"},"join()")," method a function and do that with an instance of join condition builder which\nwill be passed to that function as its only parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"JoinConditionBuilder")," class can be found at ",Object(b.b)("inlineCode",{parentName:"p"},"silvie/database/builders/condition/join"),"."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"import JoinConditionBuilder from 'silvie/database/builders/condition/join';\n\nconst jcb = new JoinConditionBuilder();\n")),Object(b.b)("p",null,"There are almost no cases that you might need to create an instance of this class on your own. You just need to use the\ninstance provided to the join method callback function in a query builder, in case you want to write complex joining\nconditions."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"qb.join('posts', (jcb) => {\n    // Conficure the condition builder\n});\n")),Object(b.b)("h4",{id:"jcbon"},"jcb.on()"),Object(b.b)("p",null,"This method will add a condition to check a column with a value. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"You are able to pass a ",Object(b.b)("inlineCode",{parentName:"p"},"Function")," to the ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter. This will be callback function which will get a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#join-condition-builder"}),"JoinConditionBuilder")," instance, and the queries made with that condition builder will be\ngrouped together in the final query."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .on('posts.published', true);\n// Only joining the published posts with their users\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .on((cb) => {\n       cb.on('posts.published', true)\n         .orOn('posts.verified', true)\n   });\n// Only joining the published and verified posts\n")),Object(b.b)("h4",{id:"jcbonnull"},"jcb.onNull()"),Object(b.b)("p",null,"This method will add a condition which its operand should be null. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .onNull('posts.thumbnail');\n// Only joining posts without a thumbnail\n")),Object(b.b)("h4",{id:"jcbonnotnull"},"jcb.onNotNull()"),Object(b.b)("p",null,"This method will add a condition which its operand should not be null."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .onNotNull('posts.translator_name');\n// Only joining posts with a translator name\n")),Object(b.b)("h4",{id:"jcbonbetween"},"jcb.onBetween()"),Object(b.b)("p",null,"This method will add a condition which its operand should be between two values. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"values")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array containing two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries, or a query builder instance which\nreturns a single column and two rows."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .onBetween('posts.created_at', ['2019-01-01', '2020-12-31']);\n// Only joining posts that was \n// posted in '2019 Jan 1' and '2020 Dec 31'\n")),Object(b.b)("h4",{id:"jcbonnotbetween"},"jcb.onNotBetween()"),Object(b.b)("p",null,"This method will add a condition which its operand should not be between two values. The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array\nwith two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"values")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array containing two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries, or a query builder instance which\nreturns a single column and two rows."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .onNotBetween('posts.review', [2, 7]);\n// Only joining posts that was not\n// reviewed 2 to 7 times\n")),Object(b.b)("h4",{id:"jcbonin"},"jcb.onIn()"),Object(b.b)("p",null,"This method will add a condition which its operand should be present in a set of values. The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be\nan array of ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue"),"s. This array should contain one or more entries in it."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"values")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array containing two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries, or a query builder instance which\nreturns a single column."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .onIn('posts.category', ['Science', 'Technology', 'Art']);\n// Only joining posts from\n// 'Science', 'Technology' and 'Art' categories\n")),Object(b.b)("h4",{id:"jcbonnotin"},"jcb.onNotIn()"),Object(b.b)("p",null,"This method will add a condition which its operand should not be present in a set of values. The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be\nan array of ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue"),"s. This array should contain one or more entries in it."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"values")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"values")," parameter must be an array containing two ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," entries, or a query builder instance which\nreturns a single column."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .onNotIn('posts.user_id', [1, 2]);\n// Only joining posts that was not\n// from users with 1 or 2 id\n")),Object(b.b)("h4",{id:"jcbonlike"},"jcb.onLike()"),Object(b.b)("p",null,"This method will add a condition which its operand should be like a specified pattern. The pattern is the same pattern\nused in SQL which you can define wild cards with ",Object(b.b)("inlineCode",{parentName:"p"},"'%'")," and single unknown characters with ",Object(b.b)("inlineCode",{parentName:"p"},"'_'"),"."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .onLike('posts.title', 'Breaking News:%');\n// Only joining posts that their\n// title starts with 'Breaking News:'\n")),Object(b.b)("h4",{id:"jcbonnotlike"},"jcb.onNotLike()"),Object(b.b)("p",null,"This method will add a condition which its operand should be like a specified pattern. The pattern is the same pattern\nused in SQL which you can define wild cards with ",Object(b.b)("inlineCode",{parentName:"p"},"'%'")," and single unknown characters with ",Object(b.b)("inlineCode",{parentName:"p"},"'_'"),"."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .onNotLike('posts.title', '[DRAFT]%');\n// Only joining posts that their\n// title does not start with '[DRAFT]' tag\n")),Object(b.b)("h4",{id:"jcboncolumn"},"jcb.onColumn()"),Object(b.b)("p",null,"This method will add a condition to compare two columns values with each other."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"firstColumn")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"secondColumn?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(b.b)("p",null,"If you don't specify a ",Object(b.b)("inlineCode",{parentName:"p"},"secondColumn"),", The value of the ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the second column, and\nthe operator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .onColumn('posts.thumbnail', 'users.picture');\n// Only joining those posts that their thumbnail\n// is their user profile picture\n")),Object(b.b)("h4",{id:"jcbondate"},"jcb.onDate()"),Object(b.b)("p",null,"This method will add a condition for the date part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .onDate('posts.published_at', '2020-02-02');\n// Only joining posts that was posted on '2020-02-02'\n")),Object(b.b)("h4",{id:"jcbonyear"},"jcb.onYear()"),Object(b.b)("p",null,"This method will add a condition for the year part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .onYear('posts.published_at', '>=', '2018');\n// Only joining posts that was posted after 2018\n")),Object(b.b)("h4",{id:"jcbonmonth"},"jcb.onMonth()"),Object(b.b)("p",null,"This method will add a condition for the month part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .onMonth('posts.published_at', '12');\n// Only joining posts that was posted in December\n")),Object(b.b)("h4",{id:"jcbonday"},"jcb.onDay()"),Object(b.b)("p",null,"This method will add a condition for the day part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .onDay('posts.published_at', '22');\n// Only joining posts that was posted on 22th day of month\n")),Object(b.b)("h4",{id:"jcbontime"},"jcb.onTime()"),Object(b.b)("p",null,"This method will add a condition for the time part of a date like column."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"column")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"}),"<Function",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"operator?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#toperator"}),"<TOperator",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," |\n",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"value?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#tbasevalue"}),"<TBaseValue",">")," | ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/query-builders#query-builder"}),"<QueryBuilder",">"))),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"column")," parameter can be ",Object(b.b)("inlineCode",{parentName:"p"},"string")," value indicating a column name, or a query builder instance which returns a single\ncolumn in a single row, and will be treated as a sub select in the condition."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter can either be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#toperator"}),"TOperator")," indicating the operator of condition, a\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. However, this depends on the next parameter."),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter should be a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#tbasevalue"}),"TBaseValue")," or a ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#query-builder"}),"QueryBuilder")," instance. In case that you pass\na query builder as the value, it will be treated as a sub select in the condition clause."),Object(b.b)("p",null,"If you don't specify the ",Object(b.b)("inlineCode",{parentName:"p"},"value")," parameter, the value of ",Object(b.b)("inlineCode",{parentName:"p"},"operator")," parameter will be assumed as the value, and the\noperator will be ",Object(b.b)("inlineCode",{parentName:"p"},"=")," by default."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onColumn('users.id', 'posts.user_id')\n   .onTime('posts.published_at', '<', '10:30');\n// Only joining posts that was posted before 10:30 AM\n")),Object(b.b)("h4",{id:"jcbonraw"},"jcb.onRaw()"),Object(b.b)("p",null,"This method will add a raw query as a condition to your final query. "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"query")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"params?")," ",Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<TBaseValue",">")," default: ",Object(b.b)("inlineCode",{parentName:"li"},"[]"))),Object(b.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"The raw queries will be added to the final query untouched, so ",Object(b.b)("strong",{parentName:"p"},"use it if you know what you are doing"),"."))),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"jcb.onRaw(\n    \"`users`.`id` = `posts`.`user_id` AND UPPER(`users`.`name`) = 'JOE'\"\n);\n")),Object(b.b)("h2",{id:"types"},"Types"),Object(b.b)("h3",{id:"tbasevalue"},"TBaseValue"),Object(b.b)("p",null,"Values of this type can be one these:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type"}),"<boolean",">"))),Object(b.b)("h3",{id:"toperator"},"TOperator"),Object(b.b)("p",null,"Values of this type are strings matching the following list:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"="),Object(b.b)("li",{parentName:"ul"},"!="),Object(b.b)("li",{parentName:"ul"},">"),Object(b.b)("li",{parentName:"ul"},">","="),Object(b.b)("li",{parentName:"ul"},"<"),Object(b.b)("li",{parentName:"ul"},"<=")))}s.isMDXComponent=!0},99:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),s=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=s(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,i=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),u=s(a),d=n,m=u["".concat(i,".").concat(d)]||u[d]||p[d]||b;return a?r.a.createElement(m,l(l({ref:t},o),{},{components:a})):r.a.createElement(m,l({ref:t},o))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,i=new Array(b);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var o=2;o<b;o++)i[o]=a[o];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);