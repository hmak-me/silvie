(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{77:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(2),o=n(6),a=(n(0),n(91)),i={id:"unit-tests",title:"Unit Tests"},s={unversionedId:"unit-tests",id:"unit-tests",isDocsHomePage:!1,title:"Unit Tests",description:"Code testing tools always matter. It improves your code coverage and reduces your debugging. Silvie integrated with",source:"@site/docs/unit-tests.md",slug:"/unit-tests",permalink:"/docs/unit-tests",editUrl:"https://github.com/silviejs/silviejs.github.io/tree/main/website/docs/unit-tests.md",version:"current",sidebar:"docsSidebar",previous:{title:"Cryptography",permalink:"/docs/cryptography"}},c=[{value:"Create Tests",id:"create-tests",children:[]},{value:"Running Tests",id:"running-tests",children:[]}],l={rightToc:c};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Code testing tools always matter. It improves your code coverage and reduces your debugging. Silvie integrated with\n",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://jestjs.io"}),"Jest")," to let your create and run your test as easy as possible."),Object(a.b)("h2",{id:"create-tests"},"Create Tests"),Object(a.b)("p",null,"You can find your test files in the ",Object(a.b)("inlineCode",{parentName:"p"},"tests")," directory of your project root. If you don't have that directory, or you\nwant to create a new test, you can use the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/cli#make"}),"make command in Silvie CLI"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"silvie make test hello\n")),Object(a.b)("p",null,"This command will create a file named ",Object(a.b)("inlineCode",{parentName:"p"},"hello.test.js")," in the ",Object(a.b)("inlineCode",{parentName:"p"},"tests")," directory of your project root, with the following\ncontents which is a test suite with an empty test:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"describe('Hello Suite', () => {\n        test('Hello Test', () => {\n                // Write your test here\n        });\n});\n")),Object(a.b)("p",null,"Keep in mind that jest has been configured to look for files ending with ",Object(a.b)("inlineCode",{parentName:"p"},".test.js")," or ",Object(a.b)("inlineCode",{parentName:"p"},".test.ts")," in the whole project.\nThat ",Object(a.b)("inlineCode",{parentName:"p"},"tests")," directory meant to keep test files in one place. So you can have your test files anywhere, and they will be\nexecuted no matter where they are. "),Object(a.b)("h2",{id:"running-tests"},"Running Tests"),Object(a.b)("p",null,"There is a simple command in Silvie CLI to run all tests in the project, called ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/cli#test"}),"test")," command. This\ncommand will run the jest on your project and shows the testing result on the screen. "),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"silvie test\n")),Object(a.b)("p",null,"To learn more about writing tests, please read the docs on ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://jestjs.io/docs/en/getting-started"}),"official jest website"),"."))}u.isMDXComponent=!0},91:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,m=p["".concat(i,".").concat(d)]||p[d]||b[d]||a;return n?o.a.createElement(m,s(s({ref:t},l),{},{components:n})):o.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);