(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{72:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return o}));var i=a(3),l=a(7),n=(a(0),a(99)),r={id:"validation-rules",title:"Validation Rules"},c={unversionedId:"validation-rules",id:"validation-rules",isDocsHomePage:!1,title:"Validation Rules",description:"We've discussed the Validator Class earlier. Now you know how to create a validator and got a good",source:"@site/docs\\validation-rules.md",slug:"/validation-rules",permalink:"/docs/validation-rules",editUrl:"https://github.com/silviejs/silviejs.github.io/tree/main/website/docs/validation-rules.md",version:"current",sidebar:"docsSidebar",previous:{title:"Validator",permalink:"/docs/validator"},next:{title:"Authentication",permalink:"/docs/authentication"}},b=[{value:"Arrays",id:"arrays",children:[{value:"array",id:"array",children:[]},{value:"contains",id:"contains",children:[]},{value:"distinct",id:"distinct",children:[]}]},{value:"Credentials",id:"credentials",children:[{value:"confirmed",id:"confirmed",children:[]},{value:"creditCard",id:"creditcard",children:[]},{value:"email",id:"email",children:[]},{value:"identityCard",id:"identitycard",children:[]},{value:"name",id:"name",children:[]},{value:"phone",id:"phone",children:[]},{value:"postalCode",id:"postalcode",children:[]}]},{value:"Dates",id:"dates",children:[{value:"after",id:"after",children:[]},{value:"before",id:"before",children:[]}]},{value:"Length",id:"length",children:[{value:"length",id:"length-1",children:[]},{value:"size",id:"size",children:[]}]},{value:"Range",id:"range",children:[{value:"max",id:"max",children:[]},{value:"min",id:"min",children:[]}]},{value:"Numbers",id:"numbers",children:[{value:"divisibleBy",id:"divisibleby",children:[]},{value:"float",id:"float",children:[]},{value:"int",id:"int",children:[]},{value:"latlng",id:"latlng",children:[]},{value:"numeric",id:"numeric",children:[]}]},{value:"Requires",id:"requires",children:[{value:"nullable",id:"nullable",children:[]},{value:"present",id:"present",children:[]},{value:"required",id:"required",children:[]},{value:"requiredIf",id:"requiredif",children:[]},{value:"requiredUnless",id:"requiredunless",children:[]},{value:"requiredWith",id:"requiredwith",children:[]},{value:"requiredWithout",id:"requiredwithout",children:[]}]},{value:"Standards",id:"standards",children:[{value:"ascii",id:"ascii",children:[]},{value:"base32",id:"base32",children:[]},{value:"base64",id:"base64",children:[]},{value:"hash",id:"hash",children:[]},{value:"hex",id:"hex",children:[]},{value:"hexColor",id:"hexcolor",children:[]},{value:"isbn",id:"isbn",children:[]},{value:"isin",id:"isin",children:[]},{value:"iso8601",id:"iso8601",children:[]},{value:"iso31661Alpha2",id:"iso31661alpha2",children:[]},{value:"iso31661Alpha3",id:"iso31661alpha3",children:[]},{value:"isrc",id:"isrc",children:[]},{value:"issn",id:"issn",children:[]},{value:"json",id:"json",children:[]},{value:"jwt",id:"jwt",children:[]},{value:"md5",id:"md5",children:[]},{value:"mime",id:"mime",children:[]},{value:"mongoId",id:"mongoid",children:[]},{value:"octal",id:"octal",children:[]},{value:"rfc3339",id:"rfc3339",children:[]},{value:"uuid",id:"uuid",children:[]}]},{value:"Strings",id:"strings",children:[{value:"alpha",id:"alpha",children:[]},{value:"alphanumeric",id:"alphanumeric",children:[]},{value:"empty",id:"empty",children:[]},{value:"endsWidth",id:"endswidth",children:[]},{value:"fullWidth",id:"fullwidth",children:[]},{value:"halfWidth",id:"halfwidth",children:[]},{value:"lowercase",id:"lowercase",children:[]},{value:"multibyte",id:"multibyte",children:[]},{value:"startsWith",id:"startswith",children:[]},{value:"surrogate",id:"surrogate",children:[]},{value:"uppercase",id:"uppercase",children:[]},{value:"variableWidth",id:"variablewidth",children:[]}]},{value:"Network",id:"network",children:[{value:"dataUri",id:"datauri",children:[]},{value:"fqdn",id:"fqdn",children:[]},{value:"ip",id:"ip",children:[]},{value:"ipRange",id:"iprange",children:[]},{value:"mac",id:"mac",children:[]},{value:"magnetUri",id:"magneturi",children:[]},{value:"port",id:"port",children:[]},{value:"url",id:"url",children:[]}]},{value:"Other",id:"other",children:[{value:"boolean",id:"boolean",children:[]},{value:"equals",id:"equals",children:[]},{value:"in",id:"in",children:[]},{value:"notIn",id:"notin",children:[]}]}],s={rightToc:b};function o(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(n.b)("wrapper",Object(i.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"We've discussed the ",Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/validator"}),"Validator Class")," earlier. Now you know how to create a validator and got a good\nknowledge of the structure. There are some built-in validators in Silvie that you can use them in your validator rules\nobject. Silvie uses the ",Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"https://www.npmjs.com/package/validator"}),"validator")," package for most of these validation rules,\nand they are acting like a wrapper to make them usable by this Validator structure. Here is the full list of available\nvalidation methods:"),Object(n.b)("h2",{id:"arrays"},"Arrays"),Object(n.b)("p",null,"These validation rules apply to array values"),Object(n.b)("h3",{id:"array"},"array"),Object(n.b)("p",null,"This rule makes sure the matching value is an array."),Object(n.b)("h3",{id:"contains"},"contains"),Object(n.b)("p",null,"This rule checks if an entry exists in the array."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"key")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("h3",{id:"distinct"},"distinct"),Object(n.b)("p",null,"This rule makes sure the array doesn't have any duplicate entries."),Object(n.b)("h2",{id:"credentials"},"Credentials"),Object(n.b)("p",null,"These validation rules check credentials."),Object(n.b)("h3",{id:"confirmed"},"confirmed"),Object(n.b)("p",null,"This rule requires another data entry in the same level with a suffix of ",Object(n.b)("inlineCode",{parentName:"p"},"_confirmation")," and same value. For example if\n",Object(n.b)("inlineCode",{parentName:"p"},"password")," field needs to be confirmed, there must be a ",Object(n.b)("inlineCode",{parentName:"p"},"password_confirmation")," with the exact same value in it."),Object(n.b)("h3",{id:"creditcard"},"creditCard"),Object(n.b)("p",null,"This rule checks to see if a string is a valid credit card number or not. You may define the locale by passing it as a\nparameter."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"locale?")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("h3",{id:"email"},"email"),Object(n.b)("p",null,"This will check if a string is a valid email address or not."),Object(n.b)("h3",{id:"identitycard"},"identityCard"),Object(n.b)("p",null,"This will check to see if a string is a valid identity card or not. It accepts a locale to check for a specific locale\nidentity card."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"locale")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("h3",{id:"name"},"name"),Object(n.b)("p",null,"This rule will check if a string is a valid name or not. A valid name should not contain numbers and special characters\nexcluding whitespaces."),Object(n.b)("h3",{id:"phone"},"phone"),Object(n.b)("p",null,"This method will check for a valid phone number in the given locale."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"locale")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("h3",{id:"postalcode"},"postalCode"),Object(n.b)("p",null,"This method will check for a valid postal code in the specified locale."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"locale")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("h2",{id:"dates"},"Dates"),Object(n.b)("p",null,"The following rules will work on data strings."),Object(n.b)("h3",{id:"after"},"after"),Object(n.b)("p",null,"The value must be after a given date. You need to specify the date as its parameter."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"key")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("h3",{id:"before"},"before"),Object(n.b)("p",null,"The value must be before a given date. You need to specify the date as its parameter."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"key")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("h2",{id:"length"},"Length"),Object(n.b)("p",null,"These rules will check the length of a string or array."),Object(n.b)("h3",{id:"length-1"},"length"),Object(n.b)("p",null,"This rule checks if an ",Object(n.b)("inlineCode",{parentName:"p"},"array")," or a ",Object(n.b)("inlineCode",{parentName:"p"},"string")," have the exact same length as specified."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"value")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">"))),Object(n.b)("h3",{id:"size"},"size"),Object(n.b)("p",null,"This rule checks if an ",Object(n.b)("inlineCode",{parentName:"p"},"array")," or a ",Object(n.b)("inlineCode",{parentName:"p"},"string")," have the exact length as specified."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"value")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">"))),Object(n.b)("h2",{id:"range"},"Range"),Object(n.b)("p",null,"These rules will make sure a value is in an specific range."),Object(n.b)("h3",{id:"max"},"max"),Object(n.b)("p",null,"If it is used for a ",Object(n.b)("inlineCode",{parentName:"p"},"number"),", the value must be less than or equal to the given value. If it is used for a ",Object(n.b)("inlineCode",{parentName:"p"},"string")," or\n",Object(n.b)("inlineCode",{parentName:"p"},"array"),", the value must have a length less than or equal to the given value. "),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"value")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">"))),Object(n.b)("h3",{id:"min"},"min"),Object(n.b)("p",null,"If it is used for a ",Object(n.b)("inlineCode",{parentName:"p"},"number"),", the value must be greater or equal to the given value. If it is used for a ",Object(n.b)("inlineCode",{parentName:"p"},"string"),"\nor ",Object(n.b)("inlineCode",{parentName:"p"},"array"),", the value must have a length greater or equal to the given value."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"value")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">")," ")),Object(n.b)("h2",{id:"numbers"},"Numbers"),Object(n.b)("p",null,"The following rules will be applied to numeric values."),Object(n.b)("h3",{id:"divisibleby"},"divisibleBy"),Object(n.b)("p",null,"This rule checks to see if a number is divisible by the given number or not."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"value")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">"))),Object(n.b)("h3",{id:"float"},"float"),Object(n.b)("p",null,"This rule checks for a valid float number."),Object(n.b)("h3",{id:"int"},"int"),Object(n.b)("p",null,"This rule checks for a valid integer number."),Object(n.b)("h3",{id:"latlng"},"latlng"),Object(n.b)("p",null,"This rule requires a valid latitude-longitude combination, the format must be ",Object(n.b)("inlineCode",{parentName:"p"},"lat,long")," or ",Object(n.b)("inlineCode",{parentName:"p"},"lat, long"),"."),Object(n.b)("h3",{id:"numeric"},"numeric"),Object(n.b)("p",null,"The values passed to this rule, must be numeric."),Object(n.b)("h2",{id:"requires"},"Requires"),Object(n.b)("p",null,"The rules will check if a value exists in the data set or not."),Object(n.b)("h3",{id:"nullable"},"nullable"),Object(n.b)("p",null,"This rule will indicate that a piece of data can be missing. If the value of that data is ",Object(n.b)("inlineCode",{parentName:"p"},"null")," or ",Object(n.b)("inlineCode",{parentName:"p"},"undefined")," the\nother validation rules won't be executed any more."),Object(n.b)("h3",{id:"present"},"present"),Object(n.b)("p",null,"This rule needs to see a piece of data in the data set, no matter if it is ",Object(n.b)("inlineCode",{parentName:"p"},"null"),". It just shouldn't be ",Object(n.b)("inlineCode",{parentName:"p"},"undefined"),"."),Object(n.b)("h3",{id:"required"},"required"),Object(n.b)("p",null,"This rule will require a not ",Object(n.b)("inlineCode",{parentName:"p"},"null"),", not ",Object(n.b)("inlineCode",{parentName:"p"},"undefined")," and not empty value."),Object(n.b)("h3",{id:"requiredif"},"requiredIf"),Object(n.b)("p",null,"This will require its value only if another field has a specific value."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"fieldName")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"value")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("h3",{id:"requiredunless"},"requiredUnless"),Object(n.b)("p",null,"This will require its value only if another field isn't equal to a specific value."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"fieldName")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"value")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("h3",{id:"requiredwith"},"requiredWith"),Object(n.b)("p",null,"This rule will require its value if another field is present and not ",Object(n.b)("inlineCode",{parentName:"p"},"null"),", ",Object(n.b)("inlineCode",{parentName:"p"},"undefined")," or ",Object(n.b)("inlineCode",{parentName:"p"},"empty"),"."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"fieldName")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("h3",{id:"requiredwithout"},"requiredWithout"),Object(n.b)("p",null,"This rule will require its value if another field is not present or is ",Object(n.b)("inlineCode",{parentName:"p"},"null"),", ",Object(n.b)("inlineCode",{parentName:"p"},"undefined")," or ",Object(n.b)("inlineCode",{parentName:"p"},"empty"),"."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"fieldName")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("h2",{id:"standards"},"Standards"),Object(n.b)("p",null,"The following rules will apply to some basic standards."),Object(n.b)("h3",{id:"ascii"},"ascii"),Object(n.b)("p",null,"This rule will check for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"ASCII")," string."),Object(n.b)("h3",{id:"base32"},"base32"),Object(n.b)("p",null,"This will check for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"Base32")," string."),Object(n.b)("h3",{id:"base64"},"base64"),Object(n.b)("p",null,"This will check for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"Base64")," string."),Object(n.b)("h3",{id:"hash"},"hash"),Object(n.b)("p",null,"This will check if a string is a valid hash value of the given hashing algorithm."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"hashName")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("h3",{id:"hex"},"hex"),Object(n.b)("p",null,"This will check if a string is a valid ",Object(n.b)("inlineCode",{parentName:"p"},"Hexadecimal")," value."),Object(n.b)("h3",{id:"hexcolor"},"hexColor"),Object(n.b)("p",null,"This will check if a string is a valid hex color. "),Object(n.b)("h3",{id:"isbn"},"isbn"),Object(n.b)("p",null,"This rule checks for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"ISBN")," of version ",Object(n.b)("inlineCode",{parentName:"p"},"10")," or ",Object(n.b)("inlineCode",{parentName:"p"},"13"),"."),Object(n.b)("h3",{id:"isin"},"isin"),Object(n.b)("p",null,"This rule checks for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"ISIN"),"."),Object(n.b)("h3",{id:"iso8601"},"iso8601"),Object(n.b)("p",null,"This rule checks for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"ISO 8601")," date string."),Object(n.b)("h3",{id:"iso31661alpha2"},"iso31661Alpha2"),Object(n.b)("p",null,"This rule checks for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"ISO 31661 Alpha 2")," country code."),Object(n.b)("h3",{id:"iso31661alpha3"},"iso31661Alpha3"),Object(n.b)("p",null,"This rule checks for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"ISO 31661 Alpha 3")," country code."),Object(n.b)("h3",{id:"isrc"},"isrc"),Object(n.b)("p",null,"This rule checks for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"ISRC"),"."),Object(n.b)("h3",{id:"issn"},"issn"),Object(n.b)("p",null,"This rule checks for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"ISSN"),"."),Object(n.b)("h3",{id:"json"},"json"),Object(n.b)("p",null,"This rule will check for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"JSON")," string. If the ",Object(n.b)("inlineCode",{parentName:"p"},"allowPrimitives")," parameter is ",Object(n.b)("inlineCode",{parentName:"p"},"true"),", then the values\n",Object(n.b)("inlineCode",{parentName:"p"},"true"),", ",Object(n.b)("inlineCode",{parentName:"p"},"false")," and ",Object(n.b)("inlineCode",{parentName:"p"},"null")," will be accepted as valid ",Object(n.b)("inlineCode",{parentName:"p"},"JSON")," values."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"allowPrimitives?")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type"}),"<boolean",">")," default: ",Object(n.b)("inlineCode",{parentName:"li"},"false"))),Object(n.b)("h3",{id:"jwt"},"jwt"),Object(n.b)("p",null,"This will check for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"JWT")," token string."),Object(n.b)("h3",{id:"md5"},"md5"),Object(n.b)("p",null,"This will check for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"MD5")," hash value."),Object(n.b)("h3",{id:"mime"},"mime"),Object(n.b)("p",null,"This rule requires a valid ",Object(n.b)("inlineCode",{parentName:"p"},"MIME")," string."),Object(n.b)("h3",{id:"mongoid"},"mongoId"),Object(n.b)("p",null,"This rule will require a valid ",Object(n.b)("inlineCode",{parentName:"p"},"MongoDB ObjectID")," value."),Object(n.b)("h3",{id:"octal"},"octal"),Object(n.b)("p",null,"This rule will check for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"Octal")," value."),Object(n.b)("h3",{id:"rfc3339"},"rfc3339"),Object(n.b)("p",null,"This rule checks for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"RFC 3339")," date string."),Object(n.b)("h3",{id:"uuid"},"uuid"),Object(n.b)("p",null,"This rule checks for a valid ",Object(n.b)("inlineCode",{parentName:"p"},"UUID")," string."),Object(n.b)("h2",{id:"strings"},"Strings"),Object(n.b)("p",null,"These rules will be applied to string values."),Object(n.b)("h3",{id:"alpha"},"alpha"),Object(n.b)("p",null,"The value should be a string which only contains alphabetical characters."),Object(n.b)("h3",{id:"alphanumeric"},"alphanumeric"),Object(n.b)("p",null,"The value should be a string which only contains alphabetical and numeric characters."),Object(n.b)("h3",{id:"empty"},"empty"),Object(n.b)("p",null,"The value should be an empty string. You can specify a boolean value for the ",Object(n.b)("inlineCode",{parentName:"p"},"trim")," parameter to indicate if the value\nshould be trimmed before validation or not."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"trim?")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type"}),"<boolean",">")," default: ",Object(n.b)("inlineCode",{parentName:"li"},"true"))),Object(n.b)("h3",{id:"endswidth"},"endsWidth"),Object(n.b)("p",null,"This rule will check if the string ends with a given string."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"value")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("h3",{id:"fullwidth"},"fullWidth"),Object(n.b)("p",null,"This rule will check if the string contains any full-width characters."),Object(n.b)("h3",{id:"halfwidth"},"halfWidth"),Object(n.b)("p",null,"This rule will check if the string contains any half-width characters."),Object(n.b)("h3",{id:"lowercase"},"lowercase"),Object(n.b)("p",null,"This rule will check if the string only contains lowercase characters."),Object(n.b)("h3",{id:"multibyte"},"multibyte"),Object(n.b)("p",null,"This rule will check if the string contains any multibyte characters."),Object(n.b)("h3",{id:"startswith"},"startsWith"),Object(n.b)("p",null,"This rule will check if the string starts with a given string."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"value")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("h3",{id:"surrogate"},"surrogate"),Object(n.b)("p",null,"This rule will check if the string contains any surrogate pairs characters."),Object(n.b)("h3",{id:"uppercase"},"uppercase"),Object(n.b)("p",null,"This rule will check if the string only contains uppercase characters."),Object(n.b)("h3",{id:"variablewidth"},"variableWidth"),Object(n.b)("p",null,"This rule will check if the string contains both half-width and full-width characters."),Object(n.b)("h2",{id:"network"},"Network"),Object(n.b)("p",null,"These rules will be applied to network related data."),Object(n.b)("h3",{id:"datauri"},"dataUri"),Object(n.b)("p",null,"This rule will check if the string is a valid data URI."),Object(n.b)("h3",{id:"fqdn"},"fqdn"),Object(n.b)("p",null,"This rule will check if the string is a valid FQDN."),Object(n.b)("h3",{id:"ip"},"ip"),Object(n.b)("p",null,"This rule will check if the string is a valid IP address of the specified version"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"version?")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">")," default: ",Object(n.b)("inlineCode",{parentName:"li"},"4"))),Object(n.b)("h3",{id:"iprange"},"ipRange"),Object(n.b)("p",null,"This will check if the string is a valid IP range."),Object(n.b)("h3",{id:"mac"},"mac"),Object(n.b)("p",null,"This will check if the string is a valid MAC address. You can specify if the MAC address should not contain colons or\nnot, by the ",Object(n.b)("inlineCode",{parentName:"p"},"noColons")," parameter."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"noColons?")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type"}),"<boolean",">")," default: ",Object(n.b)("inlineCode",{parentName:"li"},"false"))),Object(n.b)("h3",{id:"magneturi"},"magnetUri"),Object(n.b)("p",null,"This rule will check if the string is a valid Magnet URI."),Object(n.b)("h3",{id:"port"},"port"),Object(n.b)("p",null,"This rule will check if the value is a valid port number. "),Object(n.b)("h3",{id:"url"},"url"),Object(n.b)("p",null,"This rule will check if the string is a valid URL."),Object(n.b)("h2",{id:"other"},"Other"),Object(n.b)("p",null,"The following rules can be used on every kind of data."),Object(n.b)("h3",{id:"boolean"},"boolean"),Object(n.b)("p",null,"This rule checks if a value is a ",Object(n.b)("inlineCode",{parentName:"p"},"boolean")," kind. A boolean kind value is a ",Object(n.b)("inlineCode",{parentName:"p"},"true")," or ",Object(n.b)("inlineCode",{parentName:"p"},"false")," value or, ",Object(n.b)("inlineCode",{parentName:"p"},"0")," or ",Object(n.b)("inlineCode",{parentName:"p"},"1"),"\nnumbers or, a string matching ",Object(n.b)("inlineCode",{parentName:"p"},"'yes'"),", ",Object(n.b)("inlineCode",{parentName:"p"},"'no'"),", ",Object(n.b)("inlineCode",{parentName:"p"},"'on'")," or ",Object(n.b)("inlineCode",{parentName:"p"},"'off'")," values."),Object(n.b)("h3",{id:"equals"},"equals"),Object(n.b)("p",null,"This rule will check if the value has the exact same value as specified."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"value")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object"}),"<object",">")," |\n",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type"}),"<boolean",">")," |\n",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">")," |\n",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(n.b)("p",null,"If the value is an ",Object(n.b)("inlineCode",{parentName:"p"},"object"),", their values will be compared by ",Object(n.b)("inlineCode",{parentName:"p"},"JSON.stringify()"),"ing both of them."),Object(n.b)("p",null,"If the value is a ",Object(n.b)("inlineCode",{parentName:"p"},"boolean"),", their value will be compared by ",Object(n.b)("inlineCode",{parentName:"p"},"!!")," operator."),Object(n.b)("p",null,"If the value is a ",Object(n.b)("inlineCode",{parentName:"p"},"number"),", they will be compared by ",Object(n.b)("inlineCode",{parentName:"p"},"parseFloat()")," or ",Object(n.b)("inlineCode",{parentName:"p"},"parseInt()")," depending on if they have anything\nafter decimal point or not."),Object(n.b)("p",null,"If the value is a ",Object(n.b)("inlineCode",{parentName:"p"},"string"),", they will be just check for equality with ",Object(n.b)("inlineCode",{parentName:"p"},"===")," operator."),Object(n.b)("p",null,"If the value is not one of these types, a loose equality checking will happen between them by ",Object(n.b)("inlineCode",{parentName:"p"},"==")," operator."),Object(n.b)("h3",{id:"in"},"in"),Object(n.b)("p",null,"This rule will check if a value ",Object(n.b)("strong",{parentName:"p"},"exists")," in a list of values. You can specify multiple parameters for this rule."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"...values")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">"))),Object(n.b)("h3",{id:"notin"},"notIn"),Object(n.b)("p",null,"This rule will check if a value ",Object(n.b)("strong",{parentName:"p"},"does not exist")," in a list of values. You can specify multiple parameters for this rule."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"...values")," ",Object(n.b)("a",Object(i.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"}),"<Array",">"))))}o.isMDXComponent=!0},99:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return h}));var i=a(0),l=a.n(i);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,i,l=function(e,t){if(null==e)return{};var a,i,l={},n=Object.keys(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=l.a.createContext({}),o=function(e){var t=l.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},d=function(e){var t=o(e.components);return l.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},p=l.a.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,r=e.parentName,s=b(e,["components","mdxType","originalType","parentName"]),d=o(a),p=i,h=d["".concat(r,".").concat(p)]||d[p]||u[p]||n;return a?l.a.createElement(h,c(c({ref:t},s),{},{components:a})):l.a.createElement(h,c({ref:t},s))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,r=new Array(n);r[0]=p;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:i,r[1]=c;for(var s=2;s<n;s++)r[s]=a[s];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);