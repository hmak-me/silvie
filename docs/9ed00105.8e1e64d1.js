(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return r})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return b}));var i=n(2),a=(n(0),n(92));const o={id:"configuration",title:"Configuration"},r={unversionedId:"configuration",id:"configuration",isDocsHomePage:!1,title:"Configuration",description:"There are a few configuration files which define how the application should work. They should be in the src/config",source:"@site/docs/configuration.md",slug:"/configuration",permalink:"/docs/configuration",version:"current",sidebar:"docsSidebar",previous:{title:"Directory Structure",permalink:"/docs/directory-structure"},next:{title:"Silvie CLI",permalink:"/docs/cli"}},s=[{value:"Authentication",id:"authentication",children:[{value:"JWT Options",id:"jwt-options",children:[]}]},{value:"Database",id:"database",children:[{value:"MySQL Options",id:"mysql-options",children:[]}]},{value:"GraphQL",id:"graphql",children:[]},{value:"HTTP",id:"http",children:[{value:"Statics",id:"statics",children:[]},{value:"Body",id:"body",children:[]},{value:"Cookie",id:"cookie",children:[]},{value:"Session",id:"session",children:[]},{value:"Uploads",id:"uploads",children:[]},{value:"SSL",id:"ssl",children:[]},{value:"CORS",id:"cors",children:[]}]},{value:"Mail",id:"mail",children:[]},{value:"Storage",id:"storage",children:[]},{value:"Dotenv",id:"dotenv",children:[{value:"Application",id:"application",children:[]},{value:"Database",id:"database-2",children:[]},{value:"Redis",id:"redis",children:[]}]},{value:"Typescript",id:"typescript",children:[]}],l={rightToc:s};function b({components:e,...t}){return Object(a.b)("wrapper",Object(i.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"There are a few configuration files which define how the application should work. They should be in the ",Object(a.b)("inlineCode",{parentName:"p"},"src/config"),"\npath. Here you will see configuration files in details. Each configuration file should return an object literal with\ntheir configurations. Note that the configuration file exports must be in ",Object(a.b)("inlineCode",{parentName:"p"},"Common JS")," format."),Object(a.b)("h2",{id:"authentication"},"Authentication"),Object(a.b)("p",null,"Silvie comes with a built-in authentication helper that we are going to discuss more in\n",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/authentication"}),"Authentication Section"),". The file must be stored in ",Object(a.b)("inlineCode",{parentName:"p"},"src/config/auth.ts"),"."),Object(a.b)("h4",{id:"driver"},"driver"),Object(a.b)("p",null,"This option specifies the driver to manage the authentication process. For now, it only supports ",Object(a.b)("inlineCode",{parentName:"p"},"JWT")," as the\nauthentication driver."),Object(a.b)("h3",{id:"jwt-options"},"JWT Options"),Object(a.b)("h4",{id:"secret"},"secret"),Object(a.b)("p",null,"JWT driver needs a secret to encrypt a given payload and generate a token for it. If you don't specify a secret, it will\ntake ",Object(a.b)("inlineCode",{parentName:"p"},"APP_KEY")," from the .env file as it's default value;"),Object(a.b)("h4",{id:"blacklist"},"blacklist"),Object(a.b)("p",null,"An invalid ",Object(a.b)("strong",{parentName:"p"},"JWT Token")," must be expired or blacklisted. One of the methods to blacklist a token is to store it into a\nblacklist file. So you need to specify a relative file path to create and use this file. The relative path will be\nresolved into the ",Object(a.b)("inlineCode",{parentName:"p"},".silvie")," directory."),Object(a.b)("p",null,"A sample authentication configuration file:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript"}),"module.exports = {\n    driver: 'jwt',\n\n    jwt: {\n        secret: '6Zfj3bE8c3BGfKhhCAQOCgQQC0goEvdDR8x4lbQhFMJT2JcUe2gsPDzk149c', \n        blacklist: './tmp/blacklist'\n    }\n};\n")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"database"},"Database"),Object(a.b)("p",null,"Silvie has a ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/database"}),"Database")," helper class to work with various databases through the predefined drivers. The file must be\nstored in ",Object(a.b)("inlineCode",{parentName:"p"},"src/config/database.ts"),". "),Object(a.b)("h4",{id:"type"},"type"),Object(a.b)("p",null,"This options will define the database type. Currently, ",Object(a.b)("inlineCode",{parentName:"p"},"mysql")," is the only option you have, but we plan to add more\ndatabases in the future. This will take ",Object(a.b)("inlineCode",{parentName:"p"},"DB_TYPE")," variable in .env file as its default value."),Object(a.b)("h4",{id:"host"},"host"),Object(a.b)("p",null,"This will define the database host. It can be an IP, localhost or a remote address. This will take ",Object(a.b)("inlineCode",{parentName:"p"},"DB_HOST")," variable in .env file as its default value."),Object(a.b)("h4",{id:"port"},"port"),Object(a.b)("p",null,"The database port will be here. Each database has its port depends on the configuration. For example MySQL runs on\n",Object(a.b)("inlineCode",{parentName:"p"},"3306")," port by default. This will take ",Object(a.b)("inlineCode",{parentName:"p"},"DB_PORT")," variable in .env file as its default value."),Object(a.b)("h4",{id:"database-1"},"database"),Object(a.b)("p",null,"The database name that you need to use in the application. This will take ",Object(a.b)("inlineCode",{parentName:"p"},"DB_DATABASE")," variable in .env file as its default value."),Object(a.b)("h4",{id:"username"},"username"),Object(a.b)("p",null,"The username of the database user. This will take ",Object(a.b)("inlineCode",{parentName:"p"},"DB_USERNAME")," variable in .env file as its default value."),Object(a.b)("h4",{id:"password"},"password"),Object(a.b)("p",null,"The password of the database user. Leave empty if user has no password. This will take ",Object(a.b)("inlineCode",{parentName:"p"},"DB_PASSWORD")," variable in\n.env file as its default value. "),Object(a.b)("h3",{id:"mysql-options"},"MySQL Options"),Object(a.b)("h4",{id:"connectionlimit"},"connectionLimit"),Object(a.b)("p",null,"The maximum number of connections that can be made into the database,"),Object(a.b)("h4",{id:"datestrings"},"dateStrings"),Object(a.b)("p",null,"Weather to convert dates into strings or not."),Object(a.b)("h4",{id:"multiplestatements"},"multipleStatements"),Object(a.b)("p",null,"Weather to allow running multiple statements in a single query or not. "),Object(a.b)("p",null,"A sample database configuration file:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript"}),"module.exports = {\n    type: 'mysql',\n    host: 'localhost',\n    port: '3306',\n\n    database: 'test_db',\n    username: 'root',\n    password: '',\n\n    mysql: {\n        connectionLimit: 10,\n        dateStrings: true,\n        multipleStatements: true\n    }\n};\n")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"graphql"},"GraphQL"),Object(a.b)("p",null,"Silvie has a built in ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/graphql"}),"GraphQL Server"),". Which can be configured through this configuration file. The file must be stored\nin ",Object(a.b)("inlineCode",{parentName:"p"},"src/config/graphql.ts"),"."),Object(a.b)("h4",{id:"enabled"},"enabled"),Object(a.b)("p",null,"This option specifies weather to initialize and run a GraphQL server or not."),Object(a.b)("h4",{id:"path"},"path"),Object(a.b)("p",null,"This option specifies the GraphQL endpoint which will accept the incoming request."),Object(a.b)("h4",{id:"middleware"},"middleware"),Object(a.b)("p",null,"You can specify an HTTP middleware for the GraphQL endpoint to process the incoming request before passing it to the\nGraphQL server. Leave blank for none. "),Object(a.b)("h4",{id:"playground"},"playground"),Object(a.b)("p",null,"Specifies weather to enable the GraphQL Playground or not."),Object(a.b)("h4",{id:"introspection"},"introspection"),Object(a.b)("p",null,"Specifies the state of GraphQL introspection system."),Object(a.b)("h4",{id:"allowjson"},"allowJSON"),Object(a.b)("p",null,"Specifies Weather to enable ",Object(a.b)("inlineCode",{parentName:"p"},"JSON")," and ",Object(a.b)("inlineCode",{parentName:"p"},"JSONObject")," data types or not."),Object(a.b)("h4",{id:"allowupload"},"allowUpload"),Object(a.b)("p",null,"Specifies Weather to allow file uploads in GraphQL or not. It also creates an ",Object(a.b)("inlineCode",{parentName:"p"},"Upload")," data type. "),Object(a.b)("h4",{id:"maxfiles"},"maxFiles"),Object(a.b)("p",null,"Specifies the Maximum number of files that can be uploaded into GraphQL server."),Object(a.b)("h4",{id:"maxfilesize"},"maxFileSize"),Object(a.b)("p",null,"Specifies the maximum size of an uploaded file in bytes. "),Object(a.b)("p",null,"A sample GraphQL configuration file:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript"}),"module.exports = {\n    enabled: true,\n\n    path: '/graphql',\n    middleware: '',\n\n    playground: true,\n    introspection: true,\n\n    allowJSON: true,\n\n    allowUpload: true,\n    maxFiles: 10,\n    maxFileSize: 10485760\n};\n")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"http"},"HTTP"),Object(a.b)("p",null,"The main part of Silvie is an ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/http"}),"HTTP Server"),". The HTTP server uses ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://expressjs.com"}),"Express Server")," as\nthe underlying web server. The configuration file for HTTP server will be stored in ",Object(a.b)("inlineCode",{parentName:"p"},"src/config/http.ts"),". This\nconfiguration file has more complex structure than the others."),Object(a.b)("h4",{id:"http2"},"HTTP2"),Object(a.b)("p",null,"Specifies weather to use HTTP/2 instead of HTTP/1.1."),Object(a.b)("h4",{id:"port-1"},"port"),Object(a.b)("p",null,"Defines the port which application will use it to run the HTTP server."),Object(a.b)("h4",{id:"trustproxy"},"trustProxy"),Object(a.b)("p",null,"This option must be enabled when the app is running behind a reverse proxy server or not. This will cause the server to\ntell express to allow incoming ",Object(a.b)("inlineCode",{parentName:"p"},"X-Forwarded-*")," headers."),Object(a.b)("h3",{id:"statics"},"Statics"),Object(a.b)("p",null,"Sometimes you need to serve static files through your HTTP server. This option will take an ",Object(a.b)("strong",{parentName:"p"},"array")," of static path\nconfigurations. A static path configuration may have the following options:"),Object(a.b)("h4",{id:"path-1"},"path"),Object(a.b)("p",null,"The actual path of the directory in the file system. If it is a relative path. It will be resolved from the execution\npath."),Object(a.b)("h4",{id:"alias"},"alias"),Object(a.b)("p",null,"The alias option will define a custom url to serve the contents of the given directory. If it is not specified, it will\ntake the directory name as the url."),Object(a.b)("h4",{id:"options"},"options"),Object(a.b)("p",null,"This option will define the behavior on this static path."),Object(a.b)("h5",{id:"acceptranges"},"acceptRanges"),Object(a.b)("p",null,"Weather to accept range request or not. It is handy if you are serving media files."),Object(a.b)("h5",{id:"cachecontrol"},"cacheControl"),Object(a.b)("p",null,"Enable or disable setting the ",Object(a.b)("inlineCode",{parentName:"p"},"Cache-Control")," header on the response."),Object(a.b)("h5",{id:"dotfiles"},"dotfiles"),Object(a.b)("p",null,"Defines the behavior of the server when a user is trying to request for a dotfile. Possible values are: "),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},'"allow"'),": Responds with the actual file"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},'"deny"'),": Responds with a ",Object(a.b)("inlineCode",{parentName:"li"},"403 Forbidden")," "),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},'"ignore"'),": Responds with a ",Object(a.b)("inlineCode",{parentName:"li"},"404 Not Found")," even if the file exists")),Object(a.b)("h5",{id:"etag"},"etag"),Object(a.b)("p",null,"This option will be set on the ",Object(a.b)("inlineCode",{parentName:"p"},"ETag")," header. Possible values are:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"true"),": This will enable weak ETag"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"false"),": This will disable"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},'"weak"'),": This will enable weak ETag"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},'"strong"'),": This will enable strong ETag")),Object(a.b)("h5",{id:"extensions"},"extensions"),Object(a.b)("p",null,"This option specifies an array of extension fallbacks. If the actual file was not found, server will search for the files with\nextensions in the array and responds with the first matching file."),Object(a.b)("h5",{id:"immutable"},"immutable"),Object(a.b)("p",null,"This option will prevent the client to check if the file has change or not until the maxAge option expires. If you set\nthis option to ",Object(a.b)("inlineCode",{parentName:"p"},"true"),", you also need to specify the ",Object(a.b)("inlineCode",{parentName:"p"},"maxAge"),"."),Object(a.b)("h5",{id:"index"},"index"),Object(a.b)("p",null,"Weather to send the index file or not when a user is trying to access a directory."),Object(a.b)("h5",{id:"lastmodified"},"lastModified"),Object(a.b)("p",null,"Weather to send the files last modified date as the ",Object(a.b)("inlineCode",{parentName:"p"},"Last-Modified")," header or not."),Object(a.b)("h5",{id:"maxage"},"maxAge"),Object(a.b)("p",null,"Set ",Object(a.b)("inlineCode",{parentName:"p"},"max-age")," of ",Object(a.b)("inlineCode",{parentName:"p"},"Cache-Control")," header for the files that are being served from this path in milliseconds."),Object(a.b)("h5",{id:"redirect"},"redirect"),Object(a.b)("p",null,"Weather to redirect to trailing '/' or not when the pathname is a directory."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript"}),"module.exports = {\n    // ...\n    statics: [\n        {\n            path: './assets',\n            alias: null,\n            options: {\n                acceptRanges: true,\n                cacheControl: true,\n                dotfiles: 'ignore',\n                etag: true,\n                extensions: false,\n                immutable: false,\n                index: false,\n                lastModified: true,\n                maxAge: 0,\n                redirect: true,\n            }\n        }\n    ]\n    // ...\n}\n")),Object(a.b)("h3",{id:"body"},"Body"),Object(a.b)("p",null,"This part will define how the server should parse the incoming request bodies. Currently, these data types supported:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"text"),": plain/text"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"raw"),": application/octet-stream"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"json"),": application/json"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"urlencoded"),": application/x-www-form-urlencoded")),Object(a.b)("p",null,"Note that you can use their behavior on other mime types. You just need to change the mime parameter of that parser."),Object(a.b)("h4",{id:"enabled-1"},"enabled"),Object(a.b)("p",null,"This option will enable/disable the body parser all along."),Object(a.b)("h4",{id:"parsers"},"parsers"),Object(a.b)("p",null,"This option is an array of object which define a parser to be registered at application startup. A parser object can\nhave these properties:"),Object(a.b)("h5",{id:"type-1"},"type"),Object(a.b)("p",null,"This indicates the type of that parser which can be ",Object(a.b)("inlineCode",{parentName:"p"},"'text'"),", ",Object(a.b)("inlineCode",{parentName:"p"},"'raw'"),", ",Object(a.b)("inlineCode",{parentName:"p"},"'json'")," or ",Object(a.b)("inlineCode",{parentName:"p"},"'urlencoded'"),"."),Object(a.b)("h5",{id:"inflate"},"inflate"),Object(a.b)("p",null,"If set to ",Object(a.b)("inlineCode",{parentName:"p"},"true")," the deflated",Object(a.b)("sup",null,"(compressed)")," bodies will be inflated, but if set to ",Object(a.b)("inlineCode",{parentName:"p"},"false"),", the deflated bodies\nwill be ignored."),Object(a.b)("h5",{id:"limit"},"limit"),Object(a.b)("p",null,"Specifies the maximum size of incoming data in bytes."),Object(a.b)("h5",{id:"mime"},"mime"),Object(a.b)("p",null,"Specifies the corresponding mime type of the incoming data."),Object(a.b)("h5",{id:"options-1"},"options"),Object(a.b)("p",null,"Some parsers may accept extra options which you can specify them in this property.  "),Object(a.b)("h4",{id:"text-specific-options"},"Text Specific Options"),Object(a.b)("p",null,"These options can only be defined on the text data type."),Object(a.b)("h5",{id:"defaultcharset"},"defaultCharset"),Object(a.b)("p",null,"Specifies the default charset of the text when tries to decode the incoming raw data."),Object(a.b)("h4",{id:"json-specific-options"},"JSON Specific Options"),Object(a.b)("p",null,"These options can only be defined on the JSON data type."),Object(a.b)("h5",{id:"strict"},"strict"),Object(a.b)("p",null,"If set to ",Object(a.b)("inlineCode",{parentName:"p"},"true"),", it only accepts ",Object(a.b)("inlineCode",{parentName:"p"},"Object"),"s and ",Object(a.b)("inlineCode",{parentName:"p"},"Array"),"s. If set to ",Object(a.b)("inlineCode",{parentName:"p"},"false"),", accepts anything that ",Object(a.b)("inlineCode",{parentName:"p"},"JSON.parse")," accepts\nas a valid JSON string."),Object(a.b)("h4",{id:"url-encoded-specific-options"},"URL Encoded Specific Options"),Object(a.b)("p",null,"These options can only be defined on the URL Encoded data type."),Object(a.b)("h5",{id:"extended"},"extended"),Object(a.b)("p",null,"If set to ",Object(a.b)("inlineCode",{parentName:"p"},"true"),", It will allow parsing of nested urlencoded data by using the ",Object(a.b)("strong",{parentName:"p"},"qs")," library for parsing. If set to\n",Object(a.b)("inlineCode",{parentName:"p"},"false"),", It will only parse some simple urlencoded requests by using the ",Object(a.b)("strong",{parentName:"p"},"querystring")," library."),Object(a.b)("h5",{id:"parameterlimit"},"parameterLimit"),Object(a.b)("p",null,"Specifies the maximum number of parameters in the incoming request body."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript"}),"module.exports = {\n    // ...\n    body: {\n        enabled: true,\n\n        parsers: [\n            {\n                type: 'text',\n                inflate: true,\n                limit: '10mb',\n                mime: 'text/plain',\n\n                options: {\n                    defaultCharset: 'utf-8'\n                }\n            },\n            {\n                type: 'raw',\n                inflate: true,\n                limit: '10mb',\n                mime: 'application/octet-stream'\n            },\n            {\n                type: 'json',\n                inflate: true,\n                limit: '10mb',\n                mime: 'application/json',\n\n                options: {\n                    strict: false\n                }\n            },\n            {\n                type: 'urlencoded',\n                inflate: true,\n                limit: '10mb',\n                mime: 'application/x-www-form-urlencoded',\n\n                options: {\n                    extended: true,\n                    parameterLimit: 1000\n                }\n            }\n        ]\n    }\n    // ...\n}\n")),Object(a.b)("h3",{id:"cookie"},"Cookie"),Object(a.b)("p",null,"If you need to handle cookies in your request you need to enable it with this option."),Object(a.b)("h4",{id:"enabled-2"},"enabled"),Object(a.b)("p",null,"This option will enable/disable the cookies in the HTTP requests."),Object(a.b)("h4",{id:"secret-1"},"secret"),Object(a.b)("p",null,"This option will be used to encrypt cookies to generate secure cookies. It will take ",Object(a.b)("inlineCode",{parentName:"p"},"APP_KEY")," as its default value if\nit is not provided."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript"}),"module.exports = {\n    // ...\n    cookie: {\n        enabled: true,\n        secret: ''\n    }\n    // ...\n}\n")),Object(a.b)("h3",{id:"session"},"Session"),Object(a.b)("p",null,"If you need to handle client sessions in your server, you need to configure this part. Session identifiers will be\nstored in cookies. So you need to configure session cookie options too."),Object(a.b)("h4",{id:"enabled-3"},"enabled"),Object(a.b)("p",null,"This will enable/disable session feature in the HTTP server."),Object(a.b)("h4",{id:"secret-2"},"secret"),Object(a.b)("p",null,"The secret will be used to encrypt session data to improve their security."),Object(a.b)("h4",{id:"resave"},"reSave"),Object(a.b)("p",null,"Forces the session to save it again into the store event it was not change during the request."),Object(a.b)("h4",{id:"saveuninitialized"},"saveUninitialized"),Object(a.b)("p",null,"Forces the session to save into the store when it is new and not modified. "),Object(a.b)("h4",{id:"unset"},"unset"),Object(a.b)("p",null,"When a session was set to null or deleted, this option specifies to keep the session in the store or not. Possible\nvalues for this option are:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},'"keep"'),": Keeps the session but modifications will be ignored"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},'"destroy"'),": Deletes the session from the store when the response ends")),Object(a.b)("h4",{id:"trustproxy-1"},"trustProxy"),Object(a.b)("p",null,"This has to be true if the server is sitting behind a reverse proxy. You need to set this when you are using secure\ncookies with your session."),Object(a.b)("h4",{id:"driver-1"},"driver"),Object(a.b)("p",null,"This option specifies the session store driver. This can be ",Object(a.b)("inlineCode",{parentName:"p"},"redis")," or ",Object(a.b)("inlineCode",{parentName:"p"},"file"),"."),Object(a.b)("h4",{id:"driver-options"},"Driver Options"),Object(a.b)("p",null,"Driver options will specify the options for each type of session store driver.  "),Object(a.b)("h4",{id:"file-driver-options"},"File Driver Options"),Object(a.b)("p",null,"The file driver only takes these three options:"),Object(a.b)("h5",{id:"path-2"},"path"),Object(a.b)("p",null,"Specifies the path to save the session files there."),Object(a.b)("h5",{id:"extension"},"extension"),Object(a.b)("p",null,"Specifies the extension of the session files. "),Object(a.b)("h5",{id:"ttl"},"ttl"),Object(a.b)("p",null,"Specifies the maximum valid age of a session."),Object(a.b)("h4",{id:"redis-driver-options"},"Redis Driver Options"),Object(a.b)("p",null,"Redis driver is a recommended choice since Redis is a memory base key-value store if you are not having memory limits on\nyour machine. "),Object(a.b)("h5",{id:"host-1"},"host"),Object(a.b)("p",null,"The Redis host will be specified here. It will take ",Object(a.b)("inlineCode",{parentName:"p"},"REDIS_HOST")," as its default value if you leave it blank. "),Object(a.b)("h5",{id:"port-2"},"port"),Object(a.b)("p",null,"The Redis port on your machine. Usually it has to be ",Object(a.b)("inlineCode",{parentName:"p"},"6379")," but depends on the redis server configuration. It will take\n",Object(a.b)("inlineCode",{parentName:"p"},"REDIS_PORT")," as its default value if you leave it blank."),Object(a.b)("h5",{id:"password-1"},"password"),Object(a.b)("p",null,"Specifies the password to connect to the redis server. If your Redis server does not have any password, you can leave\nthis field blank, and yes, it will take ",Object(a.b)("inlineCode",{parentName:"p"},"REDIS_PASS")," as its default value, so you need to make sure that ",Object(a.b)("inlineCode",{parentName:"p"},"REDIS_PASS")," is\nalso blank in ",Object(a.b)("inlineCode",{parentName:"p"},".env")," file. "),Object(a.b)("h5",{id:"ttl-1"},"ttl"),Object(a.b)("p",null,"Specifies the maximum valid age of a session record."),Object(a.b)("h5",{id:"prefix"},"prefix"),Object(a.b)("p",null,"The key prefix used to store the session data. This is useful when there are multiple applications working with the same\nredis server instance, and you don't want them to overwrite each other records. "),Object(a.b)("h4",{id:"cookie-options"},"Cookie Options"),Object(a.b)("p",null,"These options specify how the session cookie has to be sent to the client and how it will be stored."),Object(a.b)("h5",{id:"name"},"name"),Object(a.b)("p",null,"The name of the session identified cookie"),Object(a.b)("h5",{id:"path-3"},"path"),Object(a.b)("p",null,"The path of the cookie."),Object(a.b)("h5",{id:"httponly"},"httpOnly"),Object(a.b)("p",null,"Specify weather the cookie is HTTP Only or not."),Object(a.b)("h5",{id:"maxage-1"},"maxAge"),Object(a.b)("p",null,"Specify the maximum age of the session identified cookie to live. "),Object(a.b)("h5",{id:"samesite"},"sameSite"),Object(a.b)("p",null,"Specify weather the cookie must be store with a ",Object(a.b)("inlineCode",{parentName:"p"},"same-site")," attribute or not."),Object(a.b)("h5",{id:"secure"},"secure"),Object(a.b)("p",null,"Specify weather the cookie should only be transferred through SSL connections or not."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript"}),"module.exports = {\n    // ...\n    session: {\n        enabled: true,\n        secret: '',\n        reSave: false,\n        saveUninitialized: false,\n        unset: 'destroy',\n        trustProxy: true,\n\n        driver: 'file',\n        driverOptions: {\n            file: {\n                path: './session',\n                extension: '.json',\n                ttl: 86400\n            },\n            redis: {\n                host: '',\n                port: '',\n                password: '',\n                ttl: 86400,\n                prefix: 'sess:'\n            },\n        },\n\n        cookie: {\n            name: 'sid',\n            path: '/',\n            httpOnly: true,\n            maxAge: 86400000,\n            sameSite: true,\n            secure: true\n        }\n    }\n    // ...\n}\n")),Object(a.b)("h3",{id:"uploads"},"Uploads"),Object(a.b)("p",null,"As every HTTP server needs to handle file uploads, you have the option here to enable file uploads in the server. "),Object(a.b)("h4",{id:"enabled-4"},"enabled"),Object(a.b)("p",null,"This option will enable/disable the upload feature in the HTTP server."),Object(a.b)("h4",{id:"tempdirectory"},"tempDirectory"),Object(a.b)("p",null,"Specifies a temporary path to upload the incoming files and then process the uploaded files from there."),Object(a.b)("h4",{id:"maxfilesize-1"},"maxFileSize"),Object(a.b)("p",null,"Specifies the maximum uploaded file size in bytes "),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript"}),"module.exports = {\n    // ...\n    uploads: {\n        enabled: true,\n        tempDirectory: './tmp',\n        maxFileSize: 10485760\n    }\n    // ...\n}\n")),Object(a.b)("h3",{id:"ssl"},"SSL"),Object(a.b)("p",null,"Silvie supports using SSL Certificates to secure the connection on the HTTP server. This is how you can configure HTTPS."),Object(a.b)("h4",{id:"enabled-5"},"enabled"),Object(a.b)("p",null,"This option specifies weather to enable SSL on the HTTP server or not.  "),Object(a.b)("h4",{id:"certfile"},"certFile"),Object(a.b)("p",null,"The filename of the certificate cert file."),Object(a.b)("h4",{id:"keyfile"},"keyFile"),Object(a.b)("p",null,"The filename of the certificate key file."),Object(a.b)("h4",{id:"passphrase"},"passphrase"),Object(a.b)("p",null,"This option will be required if your certificates needs a passphrase to work."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript"}),"module.exports = {\n    // ...\n    ssl: {\n        enabled: false,\n        certFile: '',\n        keyFile: '',\n        passphrase: ''\n    }\n    // ...\n}\n")),Object(a.b)("h3",{id:"cors"},"CORS"),Object(a.b)("p",null,"This part will let you specify your configuration for ",Object(a.b)("inlineCode",{parentName:"p"},"Cross Origin Resource Sharing")," aka ",Object(a.b)("inlineCode",{parentName:"p"},"CORS"),". This can limit the\nrequests coming from out of your API domain. It is an object with the following properties."),Object(a.b)("h4",{id:"enabled-6"},"enabled"),Object(a.b)("p",null,"This will enable/disable the CORS on the HTTP server."),Object(a.b)("h4",{id:"originsallowed"},"originsAllowed"),Object(a.b)("p",null,"This option will define an array of origins that are allowed to make requests to your server. If you want to allow all\norigins, just write ",Object(a.b)("inlineCode",{parentName:"p"},"*")," as the first item of this array."),Object(a.b)("h4",{id:"methodsallowed"},"methodsAllowed"),Object(a.b)("p",null,"This option will define an array of allowed HTTP verbs for the incoming requests. "),Object(a.b)("h4",{id:"headersallowed"},"headersAllowed"),Object(a.b)("p",null,"This option will define an array of allowed HTTP headers that are being sent with an incoming request. Pass ",Object(a.b)("inlineCode",{parentName:"p"},"null")," to\nallow all headers."),Object(a.b)("h4",{id:"headersexposed"},"headersExposed"),Object(a.b)("p",null,"This option specifies an array of allowed HTTP headers that can be sent with the response"),Object(a.b)("h4",{id:"allowcredentials"},"allowCredentials"),Object(a.b)("p",null,"This option specifies if it is okay to expose the response credentials to the front-end javascript code or not. The\ncredentials might be cookies, authorization headers or TLS certificates."),Object(a.b)("h4",{id:"optionssuccessstatus"},"optionsSuccessStatus"),Object(a.b)("p",null,"This option defines the HTTP status code of the ",Object(a.b)("inlineCode",{parentName:"p"},"OPTIONS Request"),". It is usually either ",Object(a.b)("strong",{parentName:"p"},"200")," or ",Object(a.b)("strong",{parentName:"p"},"204"),". "),Object(a.b)("h4",{id:"maxage-2"},"maxAge"),Object(a.b)("p",null,"This option indicates how long can the result of a preflight request can be cached in the browser."),Object(a.b)("h4",{id:"continuepreflight"},"continuePreflight"),Object(a.b)("p",null,"Specifies weather to pass the preflight request to the next handler or just respond from the CORS handler."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript"}),"module.exports = {\n    // ...\n    cors: {\n        enabled: true,\n        originsAllowed: ['*'],\n        methodsAllowed: ['GET', 'HEAD', 'PUT', 'PATCH', 'POST', 'DELETE', 'OPTIONS'],\n        headersAllowed: null,\n        headersExposed: null,\n        allowCredentials: true,\n        optionsSuccessStatus: 200,\n        maxAge: null,\n        continuePreflight: false\n    }\n}\n")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"mail"},"Mail"),Object(a.b)("p",null,"The mail helper will connect to an SMTP server and will send emails from your server. Here you will have to enter the\nserver credentials and define email accounts to be used later for sending emails. The mail helper will be discussed more\nlater in the ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/mail"}),"Mail Section"),". The file must be stored in ",Object(a.b)("inlineCode",{parentName:"p"},"src/config/mail.ts"),"."),Object(a.b)("h4",{id:"enabled-7"},"enabled"),Object(a.b)("p",null,"This option will enable or disable the mail functionality."),Object(a.b)("h4",{id:"host-2"},"host"),Object(a.b)("p",null,"This will specify the hostname of the target mail server."),Object(a.b)("h4",{id:"port-3"},"port"),Object(a.b)("p",null,"This will specify the port number of your mail server. Default port of standard SMTP might be ",Object(a.b)("inlineCode",{parentName:"p"},"25"),", ",Object(a.b)("inlineCode",{parentName:"p"},"465")," or ",Object(a.b)("inlineCode",{parentName:"p"},"578"),"."),Object(a.b)("h4",{id:"secure-1"},"secure"),Object(a.b)("p",null,"Determines if the connection should be made over TLS or not."),Object(a.b)("h4",{id:"rejectunauthorized"},"rejectUnauthorized"),Object(a.b)("p",null,"This option will determine weather to reject unauthorized SSL certificates or not."),Object(a.b)("h4",{id:"accounts"},"accounts"),Object(a.b)("p",null,"This is the option that you will define your email accounts. It is an object that keys will be the email addresses, and\ntheir corresponding value has to be an object containing a ",Object(a.b)("inlineCode",{parentName:"p"},"username")," and a ",Object(a.b)("inlineCode",{parentName:"p"},"password")," to access that email account."),Object(a.b)("p",null,"Here is a sample mail configuration file."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript"}),"export default {\n    enabled: false,\n\n    host: 'example.com',\n    port: '465',\n\n    secure: true,\n    rejectUnauthorized: false,\n\n    accounts: {\n        'test@example.com': {\n            username: 'test@example.com',\n            password: '',\n        }\n    }\n};\n")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"storage"},"Storage"),Object(a.b)("p",null,"Silvie has a storage helper class, which handles file system operations. It is useful when you are uploading files or\nneed to manage your files on the server. The configuration file must be stored in ",Object(a.b)("inlineCode",{parentName:"p"},"src/config/storage.ts"),"."),Object(a.b)("h4",{id:"path-4"},"path"),Object(a.b)("p",null,"The path to initialize storage disks. The relative path will be resolved from the execution path."),Object(a.b)("h4",{id:"disks"},"disks"),Object(a.b)("p",null,"This is an object which defines the storage disks. The keys will be the storage name, and their value will be the actual\ndirectory name for that disk. For further explanation on disks, go to ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/storage#disk"}),"Storage Disks")," section."),Object(a.b)("h4",{id:"files"},"files"),Object(a.b)("p",null,"The storage helper is able to create files. This is the configuration for the file creator."),Object(a.b)("h5",{id:"filename-hash-configuration"},"Filename Hash Configuration"),Object(a.b)("p",null,"The files that are generated without specifying a name, will get a hashed name. Here you need to specify a hashing\n",Object(a.b)("inlineCode",{parentName:"p"},"algorithm")," that defaults to ",Object(a.b)("strong",{parentName:"p"},"sha256")," and a ",Object(a.b)("inlineCode",{parentName:"p"},"salt")," method which defaults to ",Object(a.b)("strong",{parentName:"p"},"APP_KEY")," if left empty."),Object(a.b)("p",null,"A sample storage configuration file:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-typescript",metastring:'title="src/config/storage.ts"',title:'"src/config/storage.ts"'}),"module.exports = {\n    path: './storage',\n\n    disks: {\n        default: 'default'\n    },\n\n    files: {\n        hash: {\n            algorithm: 'sha256',\n            salt: ''\n        }\n    }\n};\n")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"dotenv"},"Dotenv"),Object(a.b)("p",null,".env files are one of the best ways to keep your environment specific variables organized somewhere. A .env file must be\ncreated in the root of the project. It will be copied into the build folder or injected into the bundled code."),Object(a.b)("h3",{id:"application"},"Application"),Object(a.b)("p",null,"These variables will be in different parts of the application itself."),Object(a.b)("h4",{id:"app_name"},"APP_NAME"),Object(a.b)("p",null,"This will create a name for the application. You may want to show it somewhere in the future."),Object(a.b)("h4",{id:"app_env"},"APP_ENV"),Object(a.b)("p",null,"This defines the environment in which the application is running. "),Object(a.b)("h4",{id:"app_port"},"APP_PORT"),Object(a.b)("p",null,"This has to be a port number to run the application with that port. If no port was pass through the CLI args, this port\nwill be used with a higher priority than the port in the ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"#port-1"}),"HTTP Port Config")),Object(a.b)("h4",{id:"app_debug"},"APP_DEBUG"),Object(a.b)("p",null,"Determines weather the application is in debug mode or not."),Object(a.b)("h4",{id:"app_url"},"APP_URL"),Object(a.b)("p",null,"Specifies the URL of the application. This may be useful when you want to make requests to this URL, or show it somewhere\nin your responses."),Object(a.b)("h4",{id:"app_key"},"APP_KEY"),Object(a.b)("p",null,"This one is the most important variable here. Specifies a unique key for the application to use it in encryption and\nsalting hash data."),Object(a.b)("h3",{id:"database-2"},"Database"),Object(a.b)("p",null,"These variables will be used to connect to a database when the application starts."),Object(a.b)("h4",{id:"db_type"},"DB_TYPE"),Object(a.b)("p",null,"Specifies the database type. For now, silvie just supports ",Object(a.b)("inlineCode",{parentName:"p"},"mysql"),"."),Object(a.b)("h4",{id:"db_host"},"DB_HOST"),Object(a.b)("p",null,"Specifies the database server hostname. Usually it is ",Object(a.b)("inlineCode",{parentName:"p"},"localhost"),", an IP address, or a full hostname. "),Object(a.b)("h4",{id:"db_port"},"DB_PORT"),Object(a.b)("p",null,"Specifies the database server port number. The default port number for MySQL is ",Object(a.b)("inlineCode",{parentName:"p"},"3306"),"."),Object(a.b)("h4",{id:"db_username"},"DB_USERNAME"),Object(a.b)("p",null,"Specifies the database user username."),Object(a.b)("h4",{id:"db_password"},"DB_PASSWORD"),Object(a.b)("p",null,"Specifies the database user password. Leave it blank if there was no password set for the user"),Object(a.b)("h4",{id:"db_database"},"DB_DATABASE"),Object(a.b)("p",null,"Specifies the database name."),Object(a.b)("h3",{id:"redis"},"Redis"),Object(a.b)("p",null,"The redis credentials will be used in the redis session driver. "),Object(a.b)("h4",{id:"redis_host"},"REDIS_HOST"),Object(a.b)("p",null,"Specifies the hostname of your redis server. This can be ",Object(a.b)("inlineCode",{parentName:"p"},"localhost"),", an IP address, or a full hostname."),Object(a.b)("h4",{id:"redis_port"},"REDIS_PORT"),Object(a.b)("p",null,"Specifies the redis server port number which is ",Object(a.b)("inlineCode",{parentName:"p"},"6379")," on a standard redis installation."),Object(a.b)("h4",{id:"redis_password"},"REDIS_PASSWORD"),Object(a.b)("p",null,"If your server needs a password for connecting to it, you should write it down here. Otherwise, leave it blank if there\nis no password."),Object(a.b)("p",null,"Here is the content for a ",Object(a.b)("inlineCode",{parentName:"p"},".env.example")," file:"),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-dotenv"}),"APP_NAME=\nAPP_ENV=\nAPP_PORT=\nAPP_DEBUG=\nAPP_URL=\nAPP_KEY=\n\nDB_TYPE=\nDB_HOST=\nDB_PORT=\nDB_USERNAME=\nDB_PASSWORD=\nDB_DATABASE=\n\nREDIS_HOST=\nREDIS_PORT=\nREDIS_PASSWORD=\n")),Object(a.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(a.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(a.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(a.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"Don't forget to fill in the ",Object(a.b)("inlineCode",{parentName:"p"},"APP_*")," and ",Object(a.b)("inlineCode",{parentName:"p"},"DB_*")," fields in .env file. They are necessary to run the app!"))),Object(a.b)("hr",null),Object(a.b)("h2",{id:"typescript"},"Typescript"),Object(a.b)("p",null,"Since Silvie is working with the typescript, you need to create a configuration file for it in the root of the project.\nThe file must be named ",Object(a.b)("inlineCode",{parentName:"p"},"tsconfig.json"),". To learn more about typescript configuration files,\n",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html"}),"read here"),". "),Object(a.b)("p",null,"You may have noticed that there is a part here named ",Object(a.b)("inlineCode",{parentName:"p"},"paths"),". In this part, we create alias paths for out main\ndirectories to prevent writing dirty relative paths everywhere we need to import a module."),Object(a.b)("p",null,"Here is the recommended content for this file."),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json",metastring:'title="tsconfig.json"',title:'"tsconfig.json"'}),'{\n    "compilerOptions": {\n        "module": "commonjs",\n        "esModuleInterop": true,\n        "target": "es5",\n        "moduleResolution": "node",\n        "sourceMap": true,\n        "outDir": "build",\n        "experimentalDecorators": true,\n        "baseUrl": ".",\n        "downlevelIteration": true,\n        "paths": {\n            "src/*": ["./src/*"],\n            "config/*": ["./src/config/*"],\n            "controllers/*": ["./src/controllers/*"],\n            "database/*": ["./src/database/*"],\n            "graphql/*": ["./src/graphql/*"],\n            "middlewares/*": ["./src/middlewares/*"],\n            "models/*": ["./src/models/*"]\n        }\n    }\n}\n')),Object(a.b)("hr",null),Object(a.b)("p",null,"If you don't have the ",Object(a.b)("strong",{parentName:"p"},"config directory")," in your project, ",Object(a.b)("inlineCode",{parentName:"p"},"silvie fix")," command will create the missing files with their default\nvalues."))}b.isMDXComponent=!0},92:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var i=n(0),a=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),c=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,r=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),p=c(n),h=i,u=p["".concat(r,".").concat(h)]||p[h]||d[h]||o;return n?a.a.createElement(u,s(s({ref:t},b),{},{components:n})):a.a.createElement(u,s({ref:t},b))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var b=2;b<o;b++)r[b]=n[b];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);