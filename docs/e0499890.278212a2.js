(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{91:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return o}));var r=a(3),n=a(7),i=(a(0),a(99)),c={id:"cryptography",title:"Cryptography"},b={unversionedId:"cryptography",id:"cryptography",isDocsHomePage:!1,title:"Cryptography",description:"Crypt Class",source:"@site/docs\\cryptography.md",slug:"/cryptography",permalink:"/docs/cryptography",editUrl:"https://github.com/silviejs/silviejs.github.io/tree/main/website/docs/cryptography.md",version:"current",sidebar:"docsSidebar",previous:{title:"Authentication",permalink:"/docs/authentication"},next:{title:"Unit Tests",permalink:"/docs/unit-tests"}},p=[{value:"Crypt Class",id:"crypt-class",children:[{value:"BCrypt",id:"bcrypt",children:[]},{value:"Hash",id:"hash",children:[]},{value:"Cipher",id:"cipher",children:[]}]},{value:"Types",id:"types",children:[{value:"TData",id:"tdata",children:[]},{value:"THashDigest",id:"thashdigest",children:[]},{value:"TCipherDigest",id:"tcipherdigest",children:[]},{value:"THashMethod",id:"thashmethod",children:[]},{value:"TCipherMethod",id:"tciphermethod",children:[]}]}],l={rightToc:p};function o(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"crypt-class"},"Crypt Class"),Object(i.b)("p",null,"There is a cryptography helper class which provides the essential methods to make it easy to do cryptographical\noperations. The ",Object(i.b)("inlineCode",{parentName:"p"},"Crypt")," class can be imported from ",Object(i.b)("inlineCode",{parentName:"p"},"silvie/utils/crypt"),". It is like a wrapper around the\n",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.npmjs.com/package/bcrypt"}),"bcrypt")," package and the built-in ",Object(i.b)("inlineCode",{parentName:"p"},"Node.js"),"\n",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://nodejs.org/dist/latest-v15.x/docs/api/crypto.html"}),"Crypto"),"."),Object(i.b)("h3",{id:"bcrypt"},"BCrypt"),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Bcrypt"}),"BCrypt")," is a password hashing algorithm based on the\n",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Blowfish_(cipher)"}),"Blowfish")," cipher. Silvie provides two methods on the ",Object(i.b)("inlineCode",{parentName:"p"},"Crypt")," class for\nthis kind of hashing algorithm."),Object(i.b)("h4",{id:"cryptmake"},"Crypt.make()"),Object(i.b)("p",null,"This method will take a plain string and returns its hashed version by bcrypt. "),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"plain")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import Crypt from 'silvie/utils/crypt';\n\nconst password = Crypt.make('1234qwerty');\n// $2y$08$rf16Hu/OWdAznOmXKilB7eUJznQIqzbd.1wPClQXPM0SL.yyRuS4O\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The result of a bcrypt hash will be different everytime even if you are hashing the same data."))),Object(i.b)("h4",{id:"cryptcheck"},"Crypt.check()"),Object(i.b)("p",null,"This method will check if a bcrypt hash matches a plain string and returns a ",Object(i.b)("inlineCode",{parentName:"p"},"boolean")," as the result."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"plain")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"hashed")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">"))),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import Crypt from 'silvie/utils/crypt';\n\nif (Crypt.check('1234qwerty', '$2y$12$hAPVzIXNBKRC2HEVzjlHnO4njvFuTsf/JbZuM2bvqcyqj5L3AGuNu')) {\n    console.log(\"Password Match\");\n} else {\n    console.log(\"Password Doesn't Match\");\n}\n")),Object(i.b)("h3",{id:"hash"},"Hash"),Object(i.b)("p",null,"Hashing is a one-way function that scrambles a plain text to a unique digest. There is almost no way to reverse a hashed\ndata to what it was at the beginning. Silvie uses the crypto package of ",Object(i.b)("inlineCode",{parentName:"p"},"Node.js")," for hashing."),Object(i.b)("h4",{id:"crypthash"},"Crypt.hash()"),Object(i.b)("p",null,"This method will take a data and hashes that data with the given hashing algorithm. The result will be a digest message\nin a form that you specified for it."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"data")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"#tdata"}),"<TData",">")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"algorithm?")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"#thashmethod"}),"<THashMethod",">")," default: ",Object(i.b)("inlineCode",{parentName:"li"},"'sha256'")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"digest?")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"#thashdigest"}),"<THashDigest",">")," default: ",Object(i.b)("inlineCode",{parentName:"li"},"'hex'"))),Object(i.b)("p",null,"Data\nFor a list of supported hashing algorithms please read ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"#thashmethod"}),"THashMethod")," section."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import Crypt from 'silvie/utils/crypt';\n\nconst sha256Hashed = Crypt.hash('Hello There!');\n// 35e82dd5e8910e44e8c32748375cf17da2e8e89b76990125b20cb04472b6a3b7\n\nconst buffer = Buffer.from([65, 66, 67]);\nconst md5Hashed = Crypt.hash(buffer, 'md5');\n// 902fbdd2b1df0c4f70b4a5d23525e932\n")),Object(i.b)("h3",{id:"cipher"},"Cipher"),Object(i.b)("p",null,"Cipher is a two-way function that you can encrypt and decrypt your data with the proper key. Silvie uses the crypto\npackage of ",Object(i.b)("inlineCode",{parentName:"p"},"Node.js")," to provide a helper method for cipher methods."),Object(i.b)("h4",{id:"cryptrandombytes"},"Crypt.randomBytes()"),Object(i.b)("p",null,"This method will create a buffer with the given length."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"length")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">"))),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"const buffer = Crypt.randomBytes(64);\n")),Object(i.b)("h4",{id:"cryptgenerateiv"},"Crypt.generateIV()"),Object(i.b)("p",null,"This method will create a buffer with random bytes with the given length to be used as initialization vector in a cipher\nalgorithm. The default length to generate an IV is ",Object(i.b)("inlineCode",{parentName:"p"},"16"),". Learn more about what an IV is and what it does, read\n",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Initialization_vector"}),"Initialization Vector")," on wikipedia."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"length?")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">")," default: ",Object(i.b)("inlineCode",{parentName:"li"},"16"))),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"const iv16 = Crypt.generateIV();\n\nconst iv48 = Crypt.generateIV(48);\n")),Object(i.b)("h4",{id:"cryptgeneratekey"},"Crypt.generateKey()"),Object(i.b)("p",null,"This method will create a buffer with random bytes with the given length to be used as the encryption key."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"length?")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">")," default: ",Object(i.b)("inlineCode",{parentName:"li"},"32"))),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"const key32 = Crypt.generateKey();\n\nconst key64 = Crypt.generateKey(64);\n")),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The key length depends on the algorithm. For example for ",Object(i.b)("inlineCode",{parentName:"p"},"aes128")," you need to use a key with ",Object(i.b)("inlineCode",{parentName:"p"},"16")," bytes",Object(i.b)("em",{parentName:"p"},"(128 bits)"),"."))),Object(i.b)("h4",{id:"cryptencrypt"},"Crypt.encrypt()"),Object(i.b)("p",null,"This method will take a data and encrypts it into an output digest. The output will be and ",Object(i.b)("inlineCode",{parentName:"p"},"object")," containing the\nencrypted ",Object(i.b)("inlineCode",{parentName:"p"},"data")," and the ",Object(i.b)("inlineCode",{parentName:"p"},"iv"),". "),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"data")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"#tdata"}),"<TData",">")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"key")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://nodejs.org/dist/latest-v15.x/docs/api/buffer.html#buffer_class_buffer"}),"<Buffer",">")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"algorithm")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"#tciphermethod"}),"<TCipherMethod",">")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"digest?")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"#tcipherdigest"}),"<TCipherDigest",">")," default: ",Object(i.b)("inlineCode",{parentName:"li"},"'hex'")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"IVLength")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type"}),"<number",">")," default: ",Object(i.b)("inlineCode",{parentName:"li"},"16"))),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import Crypt from 'silvie/utils/crypt';\n\n// Generate a 32 byte random key (256 bit)\nconst key = Crypt.generateKey();\n\n// Encrypt the text with the given key in 'aes256'\nconst { data, iv } = Crypt.encrypt(\"I'm An Encrypted Text\", key, 'aes256');\n\nconsole.log(key.toString('hex'));\n// Encryption Key:\n// bf7170221e9220adf22320fb4168acde6c5dd8a88f2a0e12296c7829be44bc3f\n\nconsole.log(data);\n// Encrypted Data:\n// 2cb69bb5883e8d3408947dcaf6f171389250c7be1064a374b48a1cd314f5f9f1\n\nconsole.log(iv);\n// Initialization Vector\n// c2edfb7c97e385390b514381122b9053\n")),Object(i.b)("h4",{id:"cryptdecrypt"},"Crypt.decrypt()"),Object(i.b)("p",null,"This method will take an encrypted data and decrypts it with the proper ",Object(i.b)("inlineCode",{parentName:"p"},"Key")," and ",Object(i.b)("inlineCode",{parentName:"p"},"IV")," that was used to encrypt it in\nthe first place."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"data")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"#tdata"}),"<TData",">")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"key")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://nodejs.org/dist/latest-v15.x/docs/api/buffer.html#buffer_class_buffer"}),"<Buffer",">")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"iv")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")," |\n",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://nodejs.org/dist/latest-v15.x/docs/api/buffer.html#buffer_class_buffer"}),"<Buffer",">")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"algorithm")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"#tciphermethod"}),"<TCipherMethod",">")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"digest?")," ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"#tcipherdigest"}),"<TCipherDigest",">")," default: ",Object(i.b)("inlineCode",{parentName:"li"},"'hex'"))),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import Crypt from 'silvie/utils/crypt';\n\nconst key = 'de28e3018fff3e407f2bbc3b9a9f47b3a5621e827075611996a388e5f82e8ba8';\nconst iv = '63228d5dada1e77ffa8b1781b7531d3e';\nconst data = 'cdba9fb350e42657e23e37f25811ff33';\n\nconst text = Crypt.decrypt(data, key, iv, 'aes256');\n\nconsole.log(text);\n// I Was Encrypted\n")),Object(i.b)("h2",{id:"types"},"Types"),Object(i.b)("h3",{id:"tdata"},"TData"),Object(i.b)("p",null,"This type represents a data like value, and can be one of the following data types:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type"}),"<string",">")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://nodejs.org/dist/latest-v15.x/docs/api/buffer.html#buffer_class_buffer"}),"<Buffer",">")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray"}),"<TypedArray",">")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView"}),"<DataView",">"))),Object(i.b)("h3",{id:"thashdigest"},"THashDigest"),Object(i.b)("p",null,"A string representing the type for the output digest of a hash:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"'latin1'"),Object(i.b)("li",{parentName:"ul"},"'hex'"),Object(i.b)("li",{parentName:"ul"},"'base64'")),Object(i.b)("h3",{id:"tcipherdigest"},"TCipherDigest"),Object(i.b)("p",null,"A string representing the output type of the cipher digest:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"'ascii'"),Object(i.b)("li",{parentName:"ul"},"'utf8'"),Object(i.b)("li",{parentName:"ul"},"'utf-8'"),Object(i.b)("li",{parentName:"ul"},"'utf16le'"),Object(i.b)("li",{parentName:"ul"},"'ucs2'"),Object(i.b)("li",{parentName:"ul"},"'ucs-2'"),Object(i.b)("li",{parentName:"ul"},"'base64'"),Object(i.b)("li",{parentName:"ul"},"'latin1'"),Object(i.b)("li",{parentName:"ul"},"'binary'"),Object(i.b)("li",{parentName:"ul"},"'hex'")),Object(i.b)("h3",{id:"thashmethod"},"THashMethod"),Object(i.b)("p",null,"A string to indicate the hashing algorithm. To see a list of all supported hashing algorithms, use the\n",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://nodejs.org/dist/latest-v15.x/docs/api/crypto.html#crypto_crypto_gethashes"}),"crypto.getHashes()")," method."),Object(i.b)("h3",{id:"tciphermethod"},"TCipherMethod"),Object(i.b)("p",null,"A string indicating the cipher algorithm. To see a list of all supported cipher algorithms, use the\n",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://nodejs.org/dist/latest-v15.x/docs/api/crypto.html#crypto_crypto_getciphers"}),"crypto.getCiphers()")," method."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"We do not mention the supported hashing and cipher algorithms here, because they might change in different ",Object(i.b)("inlineCode",{parentName:"p"},"Node.js"),"\nversions, and it is a very long list of items too. "))))}o.isMDXComponent=!0},99:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return m}));var r=a(0),n=a.n(r);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=n.a.createContext({}),o=function(e){var t=n.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},s=function(e){var t=o(e.components);return n.a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),s=o(a),d=r,m=s["".concat(c,".").concat(d)]||s[d]||h[d]||i;return a?n.a.createElement(m,b(b({ref:t},l),{},{components:a})):n.a.createElement(m,b({ref:t},l))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,c=new Array(i);c[0]=d;var b={};for(var p in t)hasOwnProperty.call(t,p)&&(b[p]=t[p]);b.originalType=e,b.mdxType="string"==typeof e?e:r,c[1]=b;for(var l=2;l<i;l++)c[l]=a[l];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);